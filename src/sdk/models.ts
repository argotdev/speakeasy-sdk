/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { modelsDeleteModel } from "../funcs/modelsDeleteModel.js";
import { modelsListModels } from "../funcs/modelsListModels.js";
import { modelsRetrieveModel } from "../funcs/modelsRetrieveModel.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Models extends ClientSDK {
  /**
   * Lists the currently available models, and provides basic information about each one such as the owner and availability.
   */
  async listModels(
    options?: RequestOptions,
  ): Promise<components.ListModelsResponse> {
    return unwrapAsync(modelsListModels(
      this,
      options,
    ));
  }

  /**
   * Retrieves a model instance, providing basic information about the model such as the owner and permissioning.
   */
  async retrieveModel(
    request: operations.RetrieveModelRequest,
    options?: RequestOptions,
  ): Promise<components.Model> {
    return unwrapAsync(modelsRetrieveModel(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a fine-tuned model. You must have the Owner role in your organization to delete a model.
   */
  async deleteModel(
    request: operations.DeleteModelRequest,
    options?: RequestOptions,
  ): Promise<components.DeleteModelResponse> {
    return unwrapAsync(modelsDeleteModel(
      this,
      request,
      options,
    ));
  }
}

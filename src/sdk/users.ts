/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { usersDeleteUser } from "../funcs/usersDeleteUser.js";
import { usersListUsers } from "../funcs/usersListUsers.js";
import { usersModifyUser } from "../funcs/usersModifyUser.js";
import { usersRetrieveUser } from "../funcs/usersRetrieveUser.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Users extends ClientSDK {
  /**
   * Lists all of the users in the organization.
   */
  async listUsers(
    request: operations.ListUsersRequest,
    options?: RequestOptions,
  ): Promise<components.UserListResponse> {
    return unwrapAsync(usersListUsers(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieves a user by their identifier.
   */
  async retrieveUser(
    request: operations.RetrieveUserRequest,
    options?: RequestOptions,
  ): Promise<components.User> {
    return unwrapAsync(usersRetrieveUser(
      this,
      request,
      options,
    ));
  }

  /**
   * Modifies a user's role in the organization.
   */
  async modifyUser(
    request: operations.ModifyUserRequest,
    options?: RequestOptions,
  ): Promise<components.User> {
    return unwrapAsync(usersModifyUser(
      this,
      request,
      options,
    ));
  }

  /**
   * Deletes a user from the organization.
   */
  async deleteUser(
    request: operations.DeleteUserRequest,
    options?: RequestOptions,
  ): Promise<components.UserDeleteResponse> {
    return unwrapAsync(usersDeleteUser(
      this,
      request,
      options,
    ));
  }
}

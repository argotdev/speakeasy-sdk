/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

/**
 * `owner` or `member`
 */
export const ProjectUserCreateRequestRole = {
  Owner: "owner",
  Member: "member",
} as const;
/**
 * `owner` or `member`
 */
export type ProjectUserCreateRequestRole = ClosedEnum<
  typeof ProjectUserCreateRequestRole
>;

export type ProjectUserCreateRequest = {
  /**
   * The ID of the user.
   */
  userId: string;
  /**
   * `owner` or `member`
   */
  role: ProjectUserCreateRequestRole;
};

/** @internal */
export const ProjectUserCreateRequestRole$inboundSchema: z.ZodNativeEnum<
  typeof ProjectUserCreateRequestRole
> = z.nativeEnum(ProjectUserCreateRequestRole);

/** @internal */
export const ProjectUserCreateRequestRole$outboundSchema: z.ZodNativeEnum<
  typeof ProjectUserCreateRequestRole
> = ProjectUserCreateRequestRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProjectUserCreateRequestRole$ {
  /** @deprecated use `ProjectUserCreateRequestRole$inboundSchema` instead. */
  export const inboundSchema = ProjectUserCreateRequestRole$inboundSchema;
  /** @deprecated use `ProjectUserCreateRequestRole$outboundSchema` instead. */
  export const outboundSchema = ProjectUserCreateRequestRole$outboundSchema;
}

/** @internal */
export const ProjectUserCreateRequest$inboundSchema: z.ZodType<
  ProjectUserCreateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  user_id: z.string(),
  role: ProjectUserCreateRequestRole$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "user_id": "userId",
  });
});

/** @internal */
export type ProjectUserCreateRequest$Outbound = {
  user_id: string;
  role: string;
};

/** @internal */
export const ProjectUserCreateRequest$outboundSchema: z.ZodType<
  ProjectUserCreateRequest$Outbound,
  z.ZodTypeDef,
  ProjectUserCreateRequest
> = z.object({
  userId: z.string(),
  role: ProjectUserCreateRequestRole$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    userId: "user_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProjectUserCreateRequest$ {
  /** @deprecated use `ProjectUserCreateRequest$inboundSchema` instead. */
  export const inboundSchema = ProjectUserCreateRequest$inboundSchema;
  /** @deprecated use `ProjectUserCreateRequest$outboundSchema` instead. */
  export const outboundSchema = ProjectUserCreateRequest$outboundSchema;
  /** @deprecated use `ProjectUserCreateRequest$Outbound` instead. */
  export type Outbound = ProjectUserCreateRequest$Outbound;
}

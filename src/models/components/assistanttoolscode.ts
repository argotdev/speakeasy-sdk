/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * The type of tool being defined: `code_interpreter`
 */
export const AssistantToolsCodeType = {
  CodeInterpreter: "code_interpreter",
} as const;
/**
 * The type of tool being defined: `code_interpreter`
 */
export type AssistantToolsCodeType = ClosedEnum<typeof AssistantToolsCodeType>;

export type AssistantToolsCode = {
  /**
   * The type of tool being defined: `code_interpreter`
   */
  type: AssistantToolsCodeType;
};

/** @internal */
export const AssistantToolsCodeType$inboundSchema: z.ZodNativeEnum<
  typeof AssistantToolsCodeType
> = z.nativeEnum(AssistantToolsCodeType);

/** @internal */
export const AssistantToolsCodeType$outboundSchema: z.ZodNativeEnum<
  typeof AssistantToolsCodeType
> = AssistantToolsCodeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssistantToolsCodeType$ {
  /** @deprecated use `AssistantToolsCodeType$inboundSchema` instead. */
  export const inboundSchema = AssistantToolsCodeType$inboundSchema;
  /** @deprecated use `AssistantToolsCodeType$outboundSchema` instead. */
  export const outboundSchema = AssistantToolsCodeType$outboundSchema;
}

/** @internal */
export const AssistantToolsCode$inboundSchema: z.ZodType<
  AssistantToolsCode,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: AssistantToolsCodeType$inboundSchema,
});

/** @internal */
export type AssistantToolsCode$Outbound = {
  type: string;
};

/** @internal */
export const AssistantToolsCode$outboundSchema: z.ZodType<
  AssistantToolsCode$Outbound,
  z.ZodTypeDef,
  AssistantToolsCode
> = z.object({
  type: AssistantToolsCodeType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssistantToolsCode$ {
  /** @deprecated use `AssistantToolsCode$inboundSchema` instead. */
  export const inboundSchema = AssistantToolsCode$inboundSchema;
  /** @deprecated use `AssistantToolsCode$outboundSchema` instead. */
  export const outboundSchema = AssistantToolsCode$outboundSchema;
  /** @deprecated use `AssistantToolsCode$Outbound` instead. */
  export type Outbound = AssistantToolsCode$Outbound;
}

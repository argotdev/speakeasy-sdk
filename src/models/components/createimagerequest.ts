/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const CreateImageRequestModel2 = {
  DallE2: "dall-e-2",
  DallE3: "dall-e-3",
} as const;
export type CreateImageRequestModel2 = ClosedEnum<
  typeof CreateImageRequestModel2
>;

/**
 * The model to use for image generation.
 */
export type CreateImageRequestModel = string | CreateImageRequestModel2;

/**
 * The quality of the image that will be generated. `hd` creates images with finer details and greater consistency across the image. This param is only supported for `dall-e-3`.
 */
export const Quality = {
  Standard: "standard",
  Hd: "hd",
} as const;
/**
 * The quality of the image that will be generated. `hd` creates images with finer details and greater consistency across the image. This param is only supported for `dall-e-3`.
 */
export type Quality = ClosedEnum<typeof Quality>;

/**
 * The format in which the generated images are returned. Must be one of `url` or `b64_json`. URLs are only valid for 60 minutes after the image has been generated.
 */
export const CreateImageRequestResponseFormat = {
  Url: "url",
  B64Json: "b64_json",
} as const;
/**
 * The format in which the generated images are returned. Must be one of `url` or `b64_json`. URLs are only valid for 60 minutes after the image has been generated.
 */
export type CreateImageRequestResponseFormat = ClosedEnum<
  typeof CreateImageRequestResponseFormat
>;

/**
 * The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024` for `dall-e-2`. Must be one of `1024x1024`, `1792x1024`, or `1024x1792` for `dall-e-3` models.
 */
export const Size = {
  TwoHundredAndFiftySixx256: "256x256",
  FiveHundredAndTwelvex512: "512x512",
  OneThousandAndTwentyFourx1024: "1024x1024",
  OneThousandSevenHundredAndNinetyTwox1024: "1792x1024",
  OneThousandAndTwentyFourx1792: "1024x1792",
} as const;
/**
 * The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024` for `dall-e-2`. Must be one of `1024x1024`, `1792x1024`, or `1024x1792` for `dall-e-3` models.
 */
export type Size = ClosedEnum<typeof Size>;

/**
 * The style of the generated images. Must be one of `vivid` or `natural`. Vivid causes the model to lean towards generating hyper-real and dramatic images. Natural causes the model to produce more natural, less hyper-real looking images. This param is only supported for `dall-e-3`.
 */
export const Style = {
  Vivid: "vivid",
  Natural: "natural",
} as const;
/**
 * The style of the generated images. Must be one of `vivid` or `natural`. Vivid causes the model to lean towards generating hyper-real and dramatic images. Natural causes the model to produce more natural, less hyper-real looking images. This param is only supported for `dall-e-3`.
 */
export type Style = ClosedEnum<typeof Style>;

export type CreateImageRequest = {
  /**
   * A text description of the desired image(s). The maximum length is 1000 characters for `dall-e-2` and 4000 characters for `dall-e-3`.
   */
  prompt: string;
  /**
   * The model to use for image generation.
   */
  model?: string | CreateImageRequestModel2 | null | undefined;
  /**
   * The number of images to generate. Must be between 1 and 10. For `dall-e-3`, only `n=1` is supported.
   */
  n?: number | null | undefined;
  /**
   * The quality of the image that will be generated. `hd` creates images with finer details and greater consistency across the image. This param is only supported for `dall-e-3`.
   */
  quality?: Quality | undefined;
  /**
   * The format in which the generated images are returned. Must be one of `url` or `b64_json`. URLs are only valid for 60 minutes after the image has been generated.
   */
  responseFormat?: CreateImageRequestResponseFormat | null | undefined;
  /**
   * The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024` for `dall-e-2`. Must be one of `1024x1024`, `1792x1024`, or `1024x1792` for `dall-e-3` models.
   */
  size?: Size | null | undefined;
  /**
   * The style of the generated images. Must be one of `vivid` or `natural`. Vivid causes the model to lean towards generating hyper-real and dramatic images. Natural causes the model to produce more natural, less hyper-real looking images. This param is only supported for `dall-e-3`.
   */
  style?: Style | null | undefined;
  /**
   * A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).
   *
   * @remarks
   */
  user?: string | undefined;
};

/** @internal */
export const CreateImageRequestModel2$inboundSchema: z.ZodNativeEnum<
  typeof CreateImageRequestModel2
> = z.nativeEnum(CreateImageRequestModel2);

/** @internal */
export const CreateImageRequestModel2$outboundSchema: z.ZodNativeEnum<
  typeof CreateImageRequestModel2
> = CreateImageRequestModel2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateImageRequestModel2$ {
  /** @deprecated use `CreateImageRequestModel2$inboundSchema` instead. */
  export const inboundSchema = CreateImageRequestModel2$inboundSchema;
  /** @deprecated use `CreateImageRequestModel2$outboundSchema` instead. */
  export const outboundSchema = CreateImageRequestModel2$outboundSchema;
}

/** @internal */
export const CreateImageRequestModel$inboundSchema: z.ZodType<
  CreateImageRequestModel,
  z.ZodTypeDef,
  unknown
> = z.union([z.string(), CreateImageRequestModel2$inboundSchema]);

/** @internal */
export type CreateImageRequestModel$Outbound = string | string;

/** @internal */
export const CreateImageRequestModel$outboundSchema: z.ZodType<
  CreateImageRequestModel$Outbound,
  z.ZodTypeDef,
  CreateImageRequestModel
> = z.union([z.string(), CreateImageRequestModel2$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateImageRequestModel$ {
  /** @deprecated use `CreateImageRequestModel$inboundSchema` instead. */
  export const inboundSchema = CreateImageRequestModel$inboundSchema;
  /** @deprecated use `CreateImageRequestModel$outboundSchema` instead. */
  export const outboundSchema = CreateImageRequestModel$outboundSchema;
  /** @deprecated use `CreateImageRequestModel$Outbound` instead. */
  export type Outbound = CreateImageRequestModel$Outbound;
}

/** @internal */
export const Quality$inboundSchema: z.ZodNativeEnum<typeof Quality> = z
  .nativeEnum(Quality);

/** @internal */
export const Quality$outboundSchema: z.ZodNativeEnum<typeof Quality> =
  Quality$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Quality$ {
  /** @deprecated use `Quality$inboundSchema` instead. */
  export const inboundSchema = Quality$inboundSchema;
  /** @deprecated use `Quality$outboundSchema` instead. */
  export const outboundSchema = Quality$outboundSchema;
}

/** @internal */
export const CreateImageRequestResponseFormat$inboundSchema: z.ZodNativeEnum<
  typeof CreateImageRequestResponseFormat
> = z.nativeEnum(CreateImageRequestResponseFormat);

/** @internal */
export const CreateImageRequestResponseFormat$outboundSchema: z.ZodNativeEnum<
  typeof CreateImageRequestResponseFormat
> = CreateImageRequestResponseFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateImageRequestResponseFormat$ {
  /** @deprecated use `CreateImageRequestResponseFormat$inboundSchema` instead. */
  export const inboundSchema = CreateImageRequestResponseFormat$inboundSchema;
  /** @deprecated use `CreateImageRequestResponseFormat$outboundSchema` instead. */
  export const outboundSchema = CreateImageRequestResponseFormat$outboundSchema;
}

/** @internal */
export const Size$inboundSchema: z.ZodNativeEnum<typeof Size> = z.nativeEnum(
  Size,
);

/** @internal */
export const Size$outboundSchema: z.ZodNativeEnum<typeof Size> =
  Size$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Size$ {
  /** @deprecated use `Size$inboundSchema` instead. */
  export const inboundSchema = Size$inboundSchema;
  /** @deprecated use `Size$outboundSchema` instead. */
  export const outboundSchema = Size$outboundSchema;
}

/** @internal */
export const Style$inboundSchema: z.ZodNativeEnum<typeof Style> = z.nativeEnum(
  Style,
);

/** @internal */
export const Style$outboundSchema: z.ZodNativeEnum<typeof Style> =
  Style$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Style$ {
  /** @deprecated use `Style$inboundSchema` instead. */
  export const inboundSchema = Style$inboundSchema;
  /** @deprecated use `Style$outboundSchema` instead. */
  export const outboundSchema = Style$outboundSchema;
}

/** @internal */
export const CreateImageRequest$inboundSchema: z.ZodType<
  CreateImageRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  prompt: z.string(),
  model: z.nullable(
    z.union([z.string(), CreateImageRequestModel2$inboundSchema]),
  ).optional(),
  n: z.nullable(z.number().int().default(1)),
  quality: Quality$inboundSchema.default("standard"),
  response_format: z.nullable(
    CreateImageRequestResponseFormat$inboundSchema.default("url"),
  ),
  size: z.nullable(Size$inboundSchema.default("1024x1024")),
  style: z.nullable(Style$inboundSchema.default("vivid")),
  user: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "response_format": "responseFormat",
  });
});

/** @internal */
export type CreateImageRequest$Outbound = {
  prompt: string;
  model?: string | string | null | undefined;
  n: number | null;
  quality: string;
  response_format: string | null;
  size: string | null;
  style: string | null;
  user?: string | undefined;
};

/** @internal */
export const CreateImageRequest$outboundSchema: z.ZodType<
  CreateImageRequest$Outbound,
  z.ZodTypeDef,
  CreateImageRequest
> = z.object({
  prompt: z.string(),
  model: z.nullable(
    z.union([z.string(), CreateImageRequestModel2$outboundSchema]),
  ).optional(),
  n: z.nullable(z.number().int().default(1)),
  quality: Quality$outboundSchema.default("standard"),
  responseFormat: z.nullable(
    CreateImageRequestResponseFormat$outboundSchema.default("url"),
  ),
  size: z.nullable(Size$outboundSchema.default("1024x1024")),
  style: z.nullable(Style$outboundSchema.default("vivid")),
  user: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    responseFormat: "response_format",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateImageRequest$ {
  /** @deprecated use `CreateImageRequest$inboundSchema` instead. */
  export const inboundSchema = CreateImageRequest$inboundSchema;
  /** @deprecated use `CreateImageRequest$outboundSchema` instead. */
  export const outboundSchema = CreateImageRequest$outboundSchema;
  /** @deprecated use `CreateImageRequest$Outbound` instead. */
  export type Outbound = CreateImageRequest$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const DeleteAssistantResponseObject = {
  AssistantDeleted: "assistant.deleted",
} as const;
export type DeleteAssistantResponseObject = ClosedEnum<
  typeof DeleteAssistantResponseObject
>;

export type DeleteAssistantResponse = {
  id: string;
  deleted: boolean;
  object: DeleteAssistantResponseObject;
};

/** @internal */
export const DeleteAssistantResponseObject$inboundSchema: z.ZodNativeEnum<
  typeof DeleteAssistantResponseObject
> = z.nativeEnum(DeleteAssistantResponseObject);

/** @internal */
export const DeleteAssistantResponseObject$outboundSchema: z.ZodNativeEnum<
  typeof DeleteAssistantResponseObject
> = DeleteAssistantResponseObject$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteAssistantResponseObject$ {
  /** @deprecated use `DeleteAssistantResponseObject$inboundSchema` instead. */
  export const inboundSchema = DeleteAssistantResponseObject$inboundSchema;
  /** @deprecated use `DeleteAssistantResponseObject$outboundSchema` instead. */
  export const outboundSchema = DeleteAssistantResponseObject$outboundSchema;
}

/** @internal */
export const DeleteAssistantResponse$inboundSchema: z.ZodType<
  DeleteAssistantResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  deleted: z.boolean(),
  object: DeleteAssistantResponseObject$inboundSchema,
});

/** @internal */
export type DeleteAssistantResponse$Outbound = {
  id: string;
  deleted: boolean;
  object: string;
};

/** @internal */
export const DeleteAssistantResponse$outboundSchema: z.ZodType<
  DeleteAssistantResponse$Outbound,
  z.ZodTypeDef,
  DeleteAssistantResponse
> = z.object({
  id: z.string(),
  deleted: z.boolean(),
  object: DeleteAssistantResponseObject$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteAssistantResponse$ {
  /** @deprecated use `DeleteAssistantResponse$inboundSchema` instead. */
  export const inboundSchema = DeleteAssistantResponse$inboundSchema;
  /** @deprecated use `DeleteAssistantResponse$outboundSchema` instead. */
  export const outboundSchema = DeleteAssistantResponse$outboundSchema;
  /** @deprecated use `DeleteAssistantResponse$Outbound` instead. */
  export type Outbound = DeleteAssistantResponse$Outbound;
}

export function deleteAssistantResponseToJSON(
  deleteAssistantResponse: DeleteAssistantResponse,
): string {
  return JSON.stringify(
    DeleteAssistantResponse$outboundSchema.parse(deleteAssistantResponse),
  );
}

export function deleteAssistantResponseFromJSON(
  jsonString: string,
): SafeParseResult<DeleteAssistantResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteAssistantResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteAssistantResponse' from JSON`,
  );
}

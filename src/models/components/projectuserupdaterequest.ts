/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * `owner` or `member`
 */
export const ProjectUserUpdateRequestRole = {
  Owner: "owner",
  Member: "member",
} as const;
/**
 * `owner` or `member`
 */
export type ProjectUserUpdateRequestRole = ClosedEnum<
  typeof ProjectUserUpdateRequestRole
>;

export type ProjectUserUpdateRequest = {
  /**
   * `owner` or `member`
   */
  role: ProjectUserUpdateRequestRole;
};

/** @internal */
export const ProjectUserUpdateRequestRole$inboundSchema: z.ZodNativeEnum<
  typeof ProjectUserUpdateRequestRole
> = z.nativeEnum(ProjectUserUpdateRequestRole);

/** @internal */
export const ProjectUserUpdateRequestRole$outboundSchema: z.ZodNativeEnum<
  typeof ProjectUserUpdateRequestRole
> = ProjectUserUpdateRequestRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProjectUserUpdateRequestRole$ {
  /** @deprecated use `ProjectUserUpdateRequestRole$inboundSchema` instead. */
  export const inboundSchema = ProjectUserUpdateRequestRole$inboundSchema;
  /** @deprecated use `ProjectUserUpdateRequestRole$outboundSchema` instead. */
  export const outboundSchema = ProjectUserUpdateRequestRole$outboundSchema;
}

/** @internal */
export const ProjectUserUpdateRequest$inboundSchema: z.ZodType<
  ProjectUserUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: ProjectUserUpdateRequestRole$inboundSchema,
});

/** @internal */
export type ProjectUserUpdateRequest$Outbound = {
  role: string;
};

/** @internal */
export const ProjectUserUpdateRequest$outboundSchema: z.ZodType<
  ProjectUserUpdateRequest$Outbound,
  z.ZodTypeDef,
  ProjectUserUpdateRequest
> = z.object({
  role: ProjectUserUpdateRequestRole$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProjectUserUpdateRequest$ {
  /** @deprecated use `ProjectUserUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = ProjectUserUpdateRequest$inboundSchema;
  /** @deprecated use `ProjectUserUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = ProjectUserUpdateRequest$outboundSchema;
  /** @deprecated use `ProjectUserUpdateRequest$Outbound` instead. */
  export type Outbound = ProjectUserUpdateRequest$Outbound;
}

export function projectUserUpdateRequestToJSON(
  projectUserUpdateRequest: ProjectUserUpdateRequest,
): string {
  return JSON.stringify(
    ProjectUserUpdateRequest$outboundSchema.parse(projectUserUpdateRequest),
  );
}

export function projectUserUpdateRequestFromJSON(
  jsonString: string,
): SafeParseResult<ProjectUserUpdateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ProjectUserUpdateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ProjectUserUpdateRequest' from JSON`,
  );
}

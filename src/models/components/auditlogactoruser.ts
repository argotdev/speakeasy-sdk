/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The user who performed the audit logged action.
 */
export type AuditLogActorUser = {
  /**
   * The user id.
   */
  id?: string | undefined;
  /**
   * The user email.
   */
  email?: string | undefined;
};

/** @internal */
export const AuditLogActorUser$inboundSchema: z.ZodType<
  AuditLogActorUser,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  email: z.string().optional(),
});

/** @internal */
export type AuditLogActorUser$Outbound = {
  id?: string | undefined;
  email?: string | undefined;
};

/** @internal */
export const AuditLogActorUser$outboundSchema: z.ZodType<
  AuditLogActorUser$Outbound,
  z.ZodTypeDef,
  AuditLogActorUser
> = z.object({
  id: z.string().optional(),
  email: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuditLogActorUser$ {
  /** @deprecated use `AuditLogActorUser$inboundSchema` instead. */
  export const inboundSchema = AuditLogActorUser$inboundSchema;
  /** @deprecated use `AuditLogActorUser$outboundSchema` instead. */
  export const outboundSchema = AuditLogActorUser$outboundSchema;
  /** @deprecated use `AuditLogActorUser$Outbound` instead. */
  export type Outbound = AuditLogActorUser$Outbound;
}

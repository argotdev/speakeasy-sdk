/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ProjectServiceAccountCreateRequest = {
  /**
   * The name of the service account being created.
   */
  name: string;
};

/** @internal */
export const ProjectServiceAccountCreateRequest$inboundSchema: z.ZodType<
  ProjectServiceAccountCreateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
});

/** @internal */
export type ProjectServiceAccountCreateRequest$Outbound = {
  name: string;
};

/** @internal */
export const ProjectServiceAccountCreateRequest$outboundSchema: z.ZodType<
  ProjectServiceAccountCreateRequest$Outbound,
  z.ZodTypeDef,
  ProjectServiceAccountCreateRequest
> = z.object({
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProjectServiceAccountCreateRequest$ {
  /** @deprecated use `ProjectServiceAccountCreateRequest$inboundSchema` instead. */
  export const inboundSchema = ProjectServiceAccountCreateRequest$inboundSchema;
  /** @deprecated use `ProjectServiceAccountCreateRequest$outboundSchema` instead. */
  export const outboundSchema =
    ProjectServiceAccountCreateRequest$outboundSchema;
  /** @deprecated use `ProjectServiceAccountCreateRequest$Outbound` instead. */
  export type Outbound = ProjectServiceAccountCreateRequest$Outbound;
}

export function projectServiceAccountCreateRequestToJSON(
  projectServiceAccountCreateRequest: ProjectServiceAccountCreateRequest,
): string {
  return JSON.stringify(
    ProjectServiceAccountCreateRequest$outboundSchema.parse(
      projectServiceAccountCreateRequest,
    ),
  );
}

export function projectServiceAccountCreateRequestFromJSON(
  jsonString: string,
): SafeParseResult<ProjectServiceAccountCreateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ProjectServiceAccountCreateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ProjectServiceAccountCreateRequest' from JSON`,
  );
}

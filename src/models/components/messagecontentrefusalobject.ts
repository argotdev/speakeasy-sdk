/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Always `refusal`.
 */
export const MessageContentRefusalObjectType = {
  Refusal: "refusal",
} as const;
/**
 * Always `refusal`.
 */
export type MessageContentRefusalObjectType = ClosedEnum<
  typeof MessageContentRefusalObjectType
>;

/**
 * The refusal content generated by the assistant.
 */
export type MessageContentRefusalObject = {
  /**
   * Always `refusal`.
   */
  type: MessageContentRefusalObjectType;
  refusal: string;
};

/** @internal */
export const MessageContentRefusalObjectType$inboundSchema: z.ZodNativeEnum<
  typeof MessageContentRefusalObjectType
> = z.nativeEnum(MessageContentRefusalObjectType);

/** @internal */
export const MessageContentRefusalObjectType$outboundSchema: z.ZodNativeEnum<
  typeof MessageContentRefusalObjectType
> = MessageContentRefusalObjectType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MessageContentRefusalObjectType$ {
  /** @deprecated use `MessageContentRefusalObjectType$inboundSchema` instead. */
  export const inboundSchema = MessageContentRefusalObjectType$inboundSchema;
  /** @deprecated use `MessageContentRefusalObjectType$outboundSchema` instead. */
  export const outboundSchema = MessageContentRefusalObjectType$outboundSchema;
}

/** @internal */
export const MessageContentRefusalObject$inboundSchema: z.ZodType<
  MessageContentRefusalObject,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: MessageContentRefusalObjectType$inboundSchema,
  refusal: z.string(),
});

/** @internal */
export type MessageContentRefusalObject$Outbound = {
  type: string;
  refusal: string;
};

/** @internal */
export const MessageContentRefusalObject$outboundSchema: z.ZodType<
  MessageContentRefusalObject$Outbound,
  z.ZodTypeDef,
  MessageContentRefusalObject
> = z.object({
  type: MessageContentRefusalObjectType$outboundSchema,
  refusal: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MessageContentRefusalObject$ {
  /** @deprecated use `MessageContentRefusalObject$inboundSchema` instead. */
  export const inboundSchema = MessageContentRefusalObject$inboundSchema;
  /** @deprecated use `MessageContentRefusalObject$outboundSchema` instead. */
  export const outboundSchema = MessageContentRefusalObject$outboundSchema;
  /** @deprecated use `MessageContentRefusalObject$Outbound` instead. */
  export type Outbound = MessageContentRefusalObject$Outbound;
}

export function messageContentRefusalObjectToJSON(
  messageContentRefusalObject: MessageContentRefusalObject,
): string {
  return JSON.stringify(
    MessageContentRefusalObject$outboundSchema.parse(
      messageContentRefusalObject,
    ),
  );
}

export function messageContentRefusalObjectFromJSON(
  jsonString: string,
): SafeParseResult<MessageContentRefusalObject, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MessageContentRefusalObject$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MessageContentRefusalObject' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * `owner` or `reader`
 */
export const InviteRequestRole = {
  Reader: "reader",
  Owner: "owner",
} as const;
/**
 * `owner` or `reader`
 */
export type InviteRequestRole = ClosedEnum<typeof InviteRequestRole>;

export type InviteRequest = {
  /**
   * Send an email to this address
   */
  email: string;
  /**
   * `owner` or `reader`
   */
  role: InviteRequestRole;
};

/** @internal */
export const InviteRequestRole$inboundSchema: z.ZodNativeEnum<
  typeof InviteRequestRole
> = z.nativeEnum(InviteRequestRole);

/** @internal */
export const InviteRequestRole$outboundSchema: z.ZodNativeEnum<
  typeof InviteRequestRole
> = InviteRequestRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InviteRequestRole$ {
  /** @deprecated use `InviteRequestRole$inboundSchema` instead. */
  export const inboundSchema = InviteRequestRole$inboundSchema;
  /** @deprecated use `InviteRequestRole$outboundSchema` instead. */
  export const outboundSchema = InviteRequestRole$outboundSchema;
}

/** @internal */
export const InviteRequest$inboundSchema: z.ZodType<
  InviteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  email: z.string(),
  role: InviteRequestRole$inboundSchema,
});

/** @internal */
export type InviteRequest$Outbound = {
  email: string;
  role: string;
};

/** @internal */
export const InviteRequest$outboundSchema: z.ZodType<
  InviteRequest$Outbound,
  z.ZodTypeDef,
  InviteRequest
> = z.object({
  email: z.string(),
  role: InviteRequestRole$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InviteRequest$ {
  /** @deprecated use `InviteRequest$inboundSchema` instead. */
  export const inboundSchema = InviteRequest$inboundSchema;
  /** @deprecated use `InviteRequest$outboundSchema` instead. */
  export const outboundSchema = InviteRequest$outboundSchema;
  /** @deprecated use `InviteRequest$Outbound` instead. */
  export type Outbound = InviteRequest$Outbound;
}

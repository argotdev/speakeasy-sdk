/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

/**
 * The object type, which is always `organization.project.service_account.api_key`
 */
export const ProjectServiceAccountApiKeyObject = {
  OrganizationProjectServiceAccountApiKey:
    "organization.project.service_account.api_key",
} as const;
/**
 * The object type, which is always `organization.project.service_account.api_key`
 */
export type ProjectServiceAccountApiKeyObject = ClosedEnum<
  typeof ProjectServiceAccountApiKeyObject
>;

export type ProjectServiceAccountApiKey = {
  /**
   * The object type, which is always `organization.project.service_account.api_key`
   */
  object: ProjectServiceAccountApiKeyObject;
  value: string;
  name: string;
  createdAt: number;
  id: string;
};

/** @internal */
export const ProjectServiceAccountApiKeyObject$inboundSchema: z.ZodNativeEnum<
  typeof ProjectServiceAccountApiKeyObject
> = z.nativeEnum(ProjectServiceAccountApiKeyObject);

/** @internal */
export const ProjectServiceAccountApiKeyObject$outboundSchema: z.ZodNativeEnum<
  typeof ProjectServiceAccountApiKeyObject
> = ProjectServiceAccountApiKeyObject$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProjectServiceAccountApiKeyObject$ {
  /** @deprecated use `ProjectServiceAccountApiKeyObject$inboundSchema` instead. */
  export const inboundSchema = ProjectServiceAccountApiKeyObject$inboundSchema;
  /** @deprecated use `ProjectServiceAccountApiKeyObject$outboundSchema` instead. */
  export const outboundSchema =
    ProjectServiceAccountApiKeyObject$outboundSchema;
}

/** @internal */
export const ProjectServiceAccountApiKey$inboundSchema: z.ZodType<
  ProjectServiceAccountApiKey,
  z.ZodTypeDef,
  unknown
> = z.object({
  object: ProjectServiceAccountApiKeyObject$inboundSchema,
  value: z.string(),
  name: z.string(),
  created_at: z.number().int(),
  id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "created_at": "createdAt",
  });
});

/** @internal */
export type ProjectServiceAccountApiKey$Outbound = {
  object: string;
  value: string;
  name: string;
  created_at: number;
  id: string;
};

/** @internal */
export const ProjectServiceAccountApiKey$outboundSchema: z.ZodType<
  ProjectServiceAccountApiKey$Outbound,
  z.ZodTypeDef,
  ProjectServiceAccountApiKey
> = z.object({
  object: ProjectServiceAccountApiKeyObject$outboundSchema,
  value: z.string(),
  name: z.string(),
  createdAt: z.number().int(),
  id: z.string(),
}).transform((v) => {
  return remap$(v, {
    createdAt: "created_at",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProjectServiceAccountApiKey$ {
  /** @deprecated use `ProjectServiceAccountApiKey$inboundSchema` instead. */
  export const inboundSchema = ProjectServiceAccountApiKey$inboundSchema;
  /** @deprecated use `ProjectServiceAccountApiKey$outboundSchema` instead. */
  export const outboundSchema = ProjectServiceAccountApiKey$outboundSchema;
  /** @deprecated use `ProjectServiceAccountApiKey$Outbound` instead. */
  export type Outbound = ProjectServiceAccountApiKey$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Always `text`.
 */
export const MessageRequestContentTextObjectType = {
  Text: "text",
} as const;
/**
 * Always `text`.
 */
export type MessageRequestContentTextObjectType = ClosedEnum<
  typeof MessageRequestContentTextObjectType
>;

/**
 * The text content that is part of a message.
 */
export type MessageRequestContentTextObject = {
  /**
   * Always `text`.
   */
  type: MessageRequestContentTextObjectType;
  /**
   * Text content to be sent to the model
   */
  text: string;
};

/** @internal */
export const MessageRequestContentTextObjectType$inboundSchema: z.ZodNativeEnum<
  typeof MessageRequestContentTextObjectType
> = z.nativeEnum(MessageRequestContentTextObjectType);

/** @internal */
export const MessageRequestContentTextObjectType$outboundSchema:
  z.ZodNativeEnum<typeof MessageRequestContentTextObjectType> =
    MessageRequestContentTextObjectType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MessageRequestContentTextObjectType$ {
  /** @deprecated use `MessageRequestContentTextObjectType$inboundSchema` instead. */
  export const inboundSchema =
    MessageRequestContentTextObjectType$inboundSchema;
  /** @deprecated use `MessageRequestContentTextObjectType$outboundSchema` instead. */
  export const outboundSchema =
    MessageRequestContentTextObjectType$outboundSchema;
}

/** @internal */
export const MessageRequestContentTextObject$inboundSchema: z.ZodType<
  MessageRequestContentTextObject,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: MessageRequestContentTextObjectType$inboundSchema,
  text: z.string(),
});

/** @internal */
export type MessageRequestContentTextObject$Outbound = {
  type: string;
  text: string;
};

/** @internal */
export const MessageRequestContentTextObject$outboundSchema: z.ZodType<
  MessageRequestContentTextObject$Outbound,
  z.ZodTypeDef,
  MessageRequestContentTextObject
> = z.object({
  type: MessageRequestContentTextObjectType$outboundSchema,
  text: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MessageRequestContentTextObject$ {
  /** @deprecated use `MessageRequestContentTextObject$inboundSchema` instead. */
  export const inboundSchema = MessageRequestContentTextObject$inboundSchema;
  /** @deprecated use `MessageRequestContentTextObject$outboundSchema` instead. */
  export const outboundSchema = MessageRequestContentTextObject$outboundSchema;
  /** @deprecated use `MessageRequestContentTextObject$Outbound` instead. */
  export type Outbound = MessageRequestContentTextObject$Outbound;
}

export function messageRequestContentTextObjectToJSON(
  messageRequestContentTextObject: MessageRequestContentTextObject,
): string {
  return JSON.stringify(
    MessageRequestContentTextObject$outboundSchema.parse(
      messageRequestContentTextObject,
    ),
  );
}

export function messageRequestContentTextObjectFromJSON(
  jsonString: string,
): SafeParseResult<MessageRequestContentTextObject, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MessageRequestContentTextObject$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MessageRequestContentTextObject' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

/**
 * The ranker to use for the file search. If not specified will use the `auto` ranker.
 */
export const Ranker = {
  Auto: "auto",
  Default20240821: "default_2024_08_21",
} as const;
/**
 * The ranker to use for the file search. If not specified will use the `auto` ranker.
 */
export type Ranker = ClosedEnum<typeof Ranker>;

/**
 * The ranking options for the file search. If not specified, the file search tool will use the `auto` ranker and a score_threshold of 0.
 *
 * @remarks
 *
 * See the [file search tool documentation](/docs/assistants/tools/file-search/customizing-file-search-settings) for more information.
 */
export type FileSearchRankingOptions = {
  /**
   * The ranker to use for the file search. If not specified will use the `auto` ranker.
   */
  ranker?: Ranker | undefined;
  /**
   * The score threshold for the file search. All values must be a floating point number between 0 and 1.
   */
  scoreThreshold: number;
};

/** @internal */
export const Ranker$inboundSchema: z.ZodNativeEnum<typeof Ranker> = z
  .nativeEnum(Ranker);

/** @internal */
export const Ranker$outboundSchema: z.ZodNativeEnum<typeof Ranker> =
  Ranker$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Ranker$ {
  /** @deprecated use `Ranker$inboundSchema` instead. */
  export const inboundSchema = Ranker$inboundSchema;
  /** @deprecated use `Ranker$outboundSchema` instead. */
  export const outboundSchema = Ranker$outboundSchema;
}

/** @internal */
export const FileSearchRankingOptions$inboundSchema: z.ZodType<
  FileSearchRankingOptions,
  z.ZodTypeDef,
  unknown
> = z.object({
  ranker: Ranker$inboundSchema.optional(),
  score_threshold: z.number(),
}).transform((v) => {
  return remap$(v, {
    "score_threshold": "scoreThreshold",
  });
});

/** @internal */
export type FileSearchRankingOptions$Outbound = {
  ranker?: string | undefined;
  score_threshold: number;
};

/** @internal */
export const FileSearchRankingOptions$outboundSchema: z.ZodType<
  FileSearchRankingOptions$Outbound,
  z.ZodTypeDef,
  FileSearchRankingOptions
> = z.object({
  ranker: Ranker$outboundSchema.optional(),
  scoreThreshold: z.number(),
}).transform((v) => {
  return remap$(v, {
    scoreThreshold: "score_threshold",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FileSearchRankingOptions$ {
  /** @deprecated use `FileSearchRankingOptions$inboundSchema` instead. */
  export const inboundSchema = FileSearchRankingOptions$inboundSchema;
  /** @deprecated use `FileSearchRankingOptions$outboundSchema` instead. */
  export const outboundSchema = FileSearchRankingOptions$outboundSchema;
  /** @deprecated use `FileSearchRankingOptions$Outbound` instead. */
  export type Outbound = FileSearchRankingOptions$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

/**
 * The truncation strategy to use for the thread. The default is `auto`. If set to `last_messages`, the thread will be truncated to the n most recent messages in the thread. When set to `auto`, messages in the middle of the thread will be dropped to fit the context length of the model, `max_prompt_tokens`.
 */
export const TruncationObjectType = {
  Auto: "auto",
  LastMessages: "last_messages",
} as const;
/**
 * The truncation strategy to use for the thread. The default is `auto`. If set to `last_messages`, the thread will be truncated to the n most recent messages in the thread. When set to `auto`, messages in the middle of the thread will be dropped to fit the context length of the model, `max_prompt_tokens`.
 */
export type TruncationObjectType = ClosedEnum<typeof TruncationObjectType>;

/**
 * Controls for how a thread will be truncated prior to the run. Use this to control the intial context window of the run.
 */
export type TruncationObject = {
  /**
   * The truncation strategy to use for the thread. The default is `auto`. If set to `last_messages`, the thread will be truncated to the n most recent messages in the thread. When set to `auto`, messages in the middle of the thread will be dropped to fit the context length of the model, `max_prompt_tokens`.
   */
  type: TruncationObjectType;
  /**
   * The number of most recent messages from the thread when constructing the context for the run.
   */
  lastMessages?: number | null | undefined;
};

/** @internal */
export const TruncationObjectType$inboundSchema: z.ZodNativeEnum<
  typeof TruncationObjectType
> = z.nativeEnum(TruncationObjectType);

/** @internal */
export const TruncationObjectType$outboundSchema: z.ZodNativeEnum<
  typeof TruncationObjectType
> = TruncationObjectType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TruncationObjectType$ {
  /** @deprecated use `TruncationObjectType$inboundSchema` instead. */
  export const inboundSchema = TruncationObjectType$inboundSchema;
  /** @deprecated use `TruncationObjectType$outboundSchema` instead. */
  export const outboundSchema = TruncationObjectType$outboundSchema;
}

/** @internal */
export const TruncationObject$inboundSchema: z.ZodType<
  TruncationObject,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: TruncationObjectType$inboundSchema,
  last_messages: z.nullable(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    "last_messages": "lastMessages",
  });
});

/** @internal */
export type TruncationObject$Outbound = {
  type: string;
  last_messages?: number | null | undefined;
};

/** @internal */
export const TruncationObject$outboundSchema: z.ZodType<
  TruncationObject$Outbound,
  z.ZodTypeDef,
  TruncationObject
> = z.object({
  type: TruncationObjectType$outboundSchema,
  lastMessages: z.nullable(z.number().int()).optional(),
}).transform((v) => {
  return remap$(v, {
    lastMessages: "last_messages",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TruncationObject$ {
  /** @deprecated use `TruncationObject$inboundSchema` instead. */
  export const inboundSchema = TruncationObject$inboundSchema;
  /** @deprecated use `TruncationObject$outboundSchema` instead. */
  export const outboundSchema = TruncationObject$outboundSchema;
  /** @deprecated use `TruncationObject$Outbound` instead. */
  export type Outbound = TruncationObject$Outbound;
}

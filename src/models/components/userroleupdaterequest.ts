/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * `owner` or `reader`
 */
export const UserRoleUpdateRequestRole = {
  Owner: "owner",
  Reader: "reader",
} as const;
/**
 * `owner` or `reader`
 */
export type UserRoleUpdateRequestRole = ClosedEnum<
  typeof UserRoleUpdateRequestRole
>;

export type UserRoleUpdateRequest = {
  /**
   * `owner` or `reader`
   */
  role: UserRoleUpdateRequestRole;
};

/** @internal */
export const UserRoleUpdateRequestRole$inboundSchema: z.ZodNativeEnum<
  typeof UserRoleUpdateRequestRole
> = z.nativeEnum(UserRoleUpdateRequestRole);

/** @internal */
export const UserRoleUpdateRequestRole$outboundSchema: z.ZodNativeEnum<
  typeof UserRoleUpdateRequestRole
> = UserRoleUpdateRequestRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UserRoleUpdateRequestRole$ {
  /** @deprecated use `UserRoleUpdateRequestRole$inboundSchema` instead. */
  export const inboundSchema = UserRoleUpdateRequestRole$inboundSchema;
  /** @deprecated use `UserRoleUpdateRequestRole$outboundSchema` instead. */
  export const outboundSchema = UserRoleUpdateRequestRole$outboundSchema;
}

/** @internal */
export const UserRoleUpdateRequest$inboundSchema: z.ZodType<
  UserRoleUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: UserRoleUpdateRequestRole$inboundSchema,
});

/** @internal */
export type UserRoleUpdateRequest$Outbound = {
  role: string;
};

/** @internal */
export const UserRoleUpdateRequest$outboundSchema: z.ZodType<
  UserRoleUpdateRequest$Outbound,
  z.ZodTypeDef,
  UserRoleUpdateRequest
> = z.object({
  role: UserRoleUpdateRequestRole$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UserRoleUpdateRequest$ {
  /** @deprecated use `UserRoleUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = UserRoleUpdateRequest$inboundSchema;
  /** @deprecated use `UserRoleUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = UserRoleUpdateRequest$outboundSchema;
  /** @deprecated use `UserRoleUpdateRequest$Outbound` instead. */
  export type Outbound = UserRoleUpdateRequest$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maximum of 512 characters long.
 *
 * @remarks
 */
export type ModifyMessageRequestMetadata = {};

export type ModifyMessageRequest = {
  /**
   * Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maximum of 512 characters long.
   *
   * @remarks
   */
  metadata?: ModifyMessageRequestMetadata | null | undefined;
};

/** @internal */
export const ModifyMessageRequestMetadata$inboundSchema: z.ZodType<
  ModifyMessageRequestMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type ModifyMessageRequestMetadata$Outbound = {};

/** @internal */
export const ModifyMessageRequestMetadata$outboundSchema: z.ZodType<
  ModifyMessageRequestMetadata$Outbound,
  z.ZodTypeDef,
  ModifyMessageRequestMetadata
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ModifyMessageRequestMetadata$ {
  /** @deprecated use `ModifyMessageRequestMetadata$inboundSchema` instead. */
  export const inboundSchema = ModifyMessageRequestMetadata$inboundSchema;
  /** @deprecated use `ModifyMessageRequestMetadata$outboundSchema` instead. */
  export const outboundSchema = ModifyMessageRequestMetadata$outboundSchema;
  /** @deprecated use `ModifyMessageRequestMetadata$Outbound` instead. */
  export type Outbound = ModifyMessageRequestMetadata$Outbound;
}

export function modifyMessageRequestMetadataToJSON(
  modifyMessageRequestMetadata: ModifyMessageRequestMetadata,
): string {
  return JSON.stringify(
    ModifyMessageRequestMetadata$outboundSchema.parse(
      modifyMessageRequestMetadata,
    ),
  );
}

export function modifyMessageRequestMetadataFromJSON(
  jsonString: string,
): SafeParseResult<ModifyMessageRequestMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ModifyMessageRequestMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ModifyMessageRequestMetadata' from JSON`,
  );
}

/** @internal */
export const ModifyMessageRequest$inboundSchema: z.ZodType<
  ModifyMessageRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  metadata: z.nullable(z.lazy(() => ModifyMessageRequestMetadata$inboundSchema))
    .optional(),
});

/** @internal */
export type ModifyMessageRequest$Outbound = {
  metadata?: ModifyMessageRequestMetadata$Outbound | null | undefined;
};

/** @internal */
export const ModifyMessageRequest$outboundSchema: z.ZodType<
  ModifyMessageRequest$Outbound,
  z.ZodTypeDef,
  ModifyMessageRequest
> = z.object({
  metadata: z.nullable(
    z.lazy(() => ModifyMessageRequestMetadata$outboundSchema),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ModifyMessageRequest$ {
  /** @deprecated use `ModifyMessageRequest$inboundSchema` instead. */
  export const inboundSchema = ModifyMessageRequest$inboundSchema;
  /** @deprecated use `ModifyMessageRequest$outboundSchema` instead. */
  export const outboundSchema = ModifyMessageRequest$outboundSchema;
  /** @deprecated use `ModifyMessageRequest$Outbound` instead. */
  export type Outbound = ModifyMessageRequest$Outbound;
}

export function modifyMessageRequestToJSON(
  modifyMessageRequest: ModifyMessageRequest,
): string {
  return JSON.stringify(
    ModifyMessageRequest$outboundSchema.parse(modifyMessageRequest),
  );
}

export function modifyMessageRequestFromJSON(
  jsonString: string,
): SafeParseResult<ModifyMessageRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ModifyMessageRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ModifyMessageRequest' from JSON`,
  );
}

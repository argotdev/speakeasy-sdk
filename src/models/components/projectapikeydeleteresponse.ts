/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const ProjectApiKeyDeleteResponseObject = {
  OrganizationProjectApiKeyDeleted: "organization.project.api_key.deleted",
} as const;
export type ProjectApiKeyDeleteResponseObject = ClosedEnum<
  typeof ProjectApiKeyDeleteResponseObject
>;

export type ProjectApiKeyDeleteResponse = {
  object: ProjectApiKeyDeleteResponseObject;
  id: string;
  deleted: boolean;
};

/** @internal */
export const ProjectApiKeyDeleteResponseObject$inboundSchema: z.ZodNativeEnum<
  typeof ProjectApiKeyDeleteResponseObject
> = z.nativeEnum(ProjectApiKeyDeleteResponseObject);

/** @internal */
export const ProjectApiKeyDeleteResponseObject$outboundSchema: z.ZodNativeEnum<
  typeof ProjectApiKeyDeleteResponseObject
> = ProjectApiKeyDeleteResponseObject$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProjectApiKeyDeleteResponseObject$ {
  /** @deprecated use `ProjectApiKeyDeleteResponseObject$inboundSchema` instead. */
  export const inboundSchema = ProjectApiKeyDeleteResponseObject$inboundSchema;
  /** @deprecated use `ProjectApiKeyDeleteResponseObject$outboundSchema` instead. */
  export const outboundSchema =
    ProjectApiKeyDeleteResponseObject$outboundSchema;
}

/** @internal */
export const ProjectApiKeyDeleteResponse$inboundSchema: z.ZodType<
  ProjectApiKeyDeleteResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  object: ProjectApiKeyDeleteResponseObject$inboundSchema,
  id: z.string(),
  deleted: z.boolean(),
});

/** @internal */
export type ProjectApiKeyDeleteResponse$Outbound = {
  object: string;
  id: string;
  deleted: boolean;
};

/** @internal */
export const ProjectApiKeyDeleteResponse$outboundSchema: z.ZodType<
  ProjectApiKeyDeleteResponse$Outbound,
  z.ZodTypeDef,
  ProjectApiKeyDeleteResponse
> = z.object({
  object: ProjectApiKeyDeleteResponseObject$outboundSchema,
  id: z.string(),
  deleted: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProjectApiKeyDeleteResponse$ {
  /** @deprecated use `ProjectApiKeyDeleteResponse$inboundSchema` instead. */
  export const inboundSchema = ProjectApiKeyDeleteResponse$inboundSchema;
  /** @deprecated use `ProjectApiKeyDeleteResponse$outboundSchema` instead. */
  export const outboundSchema = ProjectApiKeyDeleteResponse$outboundSchema;
  /** @deprecated use `ProjectApiKeyDeleteResponse$Outbound` instead. */
  export type Outbound = ProjectApiKeyDeleteResponse$Outbound;
}

export function projectApiKeyDeleteResponseToJSON(
  projectApiKeyDeleteResponse: ProjectApiKeyDeleteResponse,
): string {
  return JSON.stringify(
    ProjectApiKeyDeleteResponse$outboundSchema.parse(
      projectApiKeyDeleteResponse,
    ),
  );
}

export function projectApiKeyDeleteResponseFromJSON(
  jsonString: string,
): SafeParseResult<ProjectApiKeyDeleteResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ProjectApiKeyDeleteResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ProjectApiKeyDeleteResponse' from JSON`,
  );
}

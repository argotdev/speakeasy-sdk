/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  StaticChunkingStrategy,
  StaticChunkingStrategy$inboundSchema,
  StaticChunkingStrategy$Outbound,
  StaticChunkingStrategy$outboundSchema,
} from "./staticchunkingstrategy.js";

/**
 * Always `static`.
 */
export const StaticChunkingStrategyRequestParamType = {
  Static: "static",
} as const;
/**
 * Always `static`.
 */
export type StaticChunkingStrategyRequestParamType = ClosedEnum<
  typeof StaticChunkingStrategyRequestParamType
>;

export type StaticChunkingStrategyRequestParam = {
  /**
   * Always `static`.
   */
  type: StaticChunkingStrategyRequestParamType;
  static: StaticChunkingStrategy;
};

/** @internal */
export const StaticChunkingStrategyRequestParamType$inboundSchema:
  z.ZodNativeEnum<typeof StaticChunkingStrategyRequestParamType> = z.nativeEnum(
    StaticChunkingStrategyRequestParamType,
  );

/** @internal */
export const StaticChunkingStrategyRequestParamType$outboundSchema:
  z.ZodNativeEnum<typeof StaticChunkingStrategyRequestParamType> =
    StaticChunkingStrategyRequestParamType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StaticChunkingStrategyRequestParamType$ {
  /** @deprecated use `StaticChunkingStrategyRequestParamType$inboundSchema` instead. */
  export const inboundSchema =
    StaticChunkingStrategyRequestParamType$inboundSchema;
  /** @deprecated use `StaticChunkingStrategyRequestParamType$outboundSchema` instead. */
  export const outboundSchema =
    StaticChunkingStrategyRequestParamType$outboundSchema;
}

/** @internal */
export const StaticChunkingStrategyRequestParam$inboundSchema: z.ZodType<
  StaticChunkingStrategyRequestParam,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: StaticChunkingStrategyRequestParamType$inboundSchema,
  static: StaticChunkingStrategy$inboundSchema,
});

/** @internal */
export type StaticChunkingStrategyRequestParam$Outbound = {
  type: string;
  static: StaticChunkingStrategy$Outbound;
};

/** @internal */
export const StaticChunkingStrategyRequestParam$outboundSchema: z.ZodType<
  StaticChunkingStrategyRequestParam$Outbound,
  z.ZodTypeDef,
  StaticChunkingStrategyRequestParam
> = z.object({
  type: StaticChunkingStrategyRequestParamType$outboundSchema,
  static: StaticChunkingStrategy$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StaticChunkingStrategyRequestParam$ {
  /** @deprecated use `StaticChunkingStrategyRequestParam$inboundSchema` instead. */
  export const inboundSchema = StaticChunkingStrategyRequestParam$inboundSchema;
  /** @deprecated use `StaticChunkingStrategyRequestParam$outboundSchema` instead. */
  export const outboundSchema =
    StaticChunkingStrategyRequestParam$outboundSchema;
  /** @deprecated use `StaticChunkingStrategyRequestParam$Outbound` instead. */
  export type Outbound = StaticChunkingStrategyRequestParam$Outbound;
}

export function staticChunkingStrategyRequestParamToJSON(
  staticChunkingStrategyRequestParam: StaticChunkingStrategyRequestParam,
): string {
  return JSON.stringify(
    StaticChunkingStrategyRequestParam$outboundSchema.parse(
      staticChunkingStrategyRequestParam,
    ),
  );
}

export function staticChunkingStrategyRequestParamFromJSON(
  jsonString: string,
): SafeParseResult<StaticChunkingStrategyRequestParam, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      StaticChunkingStrategyRequestParam$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'StaticChunkingStrategyRequestParam' from JSON`,
  );
}

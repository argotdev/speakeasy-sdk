/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  ChunkingStrategyRequestParam,
  ChunkingStrategyRequestParam$inboundSchema,
  ChunkingStrategyRequestParam$Outbound,
  ChunkingStrategyRequestParam$outboundSchema,
} from "./chunkingstrategyrequestparam.js";

export type CreateVectorStoreFileRequest = {
  /**
   * A [File](/docs/api-reference/files) ID that the vector store should use. Useful for tools like `file_search` that can access files.
   */
  fileId: string;
  /**
   * The chunking strategy used to chunk the file(s). If not set, will use the `auto` strategy.
   */
  chunkingStrategy?: ChunkingStrategyRequestParam | undefined;
};

/** @internal */
export const CreateVectorStoreFileRequest$inboundSchema: z.ZodType<
  CreateVectorStoreFileRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  file_id: z.string(),
  chunking_strategy: ChunkingStrategyRequestParam$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "file_id": "fileId",
    "chunking_strategy": "chunkingStrategy",
  });
});

/** @internal */
export type CreateVectorStoreFileRequest$Outbound = {
  file_id: string;
  chunking_strategy?: ChunkingStrategyRequestParam$Outbound | undefined;
};

/** @internal */
export const CreateVectorStoreFileRequest$outboundSchema: z.ZodType<
  CreateVectorStoreFileRequest$Outbound,
  z.ZodTypeDef,
  CreateVectorStoreFileRequest
> = z.object({
  fileId: z.string(),
  chunkingStrategy: ChunkingStrategyRequestParam$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    fileId: "file_id",
    chunkingStrategy: "chunking_strategy",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateVectorStoreFileRequest$ {
  /** @deprecated use `CreateVectorStoreFileRequest$inboundSchema` instead. */
  export const inboundSchema = CreateVectorStoreFileRequest$inboundSchema;
  /** @deprecated use `CreateVectorStoreFileRequest$outboundSchema` instead. */
  export const outboundSchema = CreateVectorStoreFileRequest$outboundSchema;
  /** @deprecated use `CreateVectorStoreFileRequest$Outbound` instead. */
  export type Outbound = CreateVectorStoreFileRequest$Outbound;
}

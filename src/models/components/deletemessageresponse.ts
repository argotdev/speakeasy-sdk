/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const DeleteMessageResponseObject = {
  ThreadMessageDeleted: "thread.message.deleted",
} as const;
export type DeleteMessageResponseObject = ClosedEnum<
  typeof DeleteMessageResponseObject
>;

export type DeleteMessageResponse = {
  id: string;
  deleted: boolean;
  object: DeleteMessageResponseObject;
};

/** @internal */
export const DeleteMessageResponseObject$inboundSchema: z.ZodNativeEnum<
  typeof DeleteMessageResponseObject
> = z.nativeEnum(DeleteMessageResponseObject);

/** @internal */
export const DeleteMessageResponseObject$outboundSchema: z.ZodNativeEnum<
  typeof DeleteMessageResponseObject
> = DeleteMessageResponseObject$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteMessageResponseObject$ {
  /** @deprecated use `DeleteMessageResponseObject$inboundSchema` instead. */
  export const inboundSchema = DeleteMessageResponseObject$inboundSchema;
  /** @deprecated use `DeleteMessageResponseObject$outboundSchema` instead. */
  export const outboundSchema = DeleteMessageResponseObject$outboundSchema;
}

/** @internal */
export const DeleteMessageResponse$inboundSchema: z.ZodType<
  DeleteMessageResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  deleted: z.boolean(),
  object: DeleteMessageResponseObject$inboundSchema,
});

/** @internal */
export type DeleteMessageResponse$Outbound = {
  id: string;
  deleted: boolean;
  object: string;
};

/** @internal */
export const DeleteMessageResponse$outboundSchema: z.ZodType<
  DeleteMessageResponse$Outbound,
  z.ZodTypeDef,
  DeleteMessageResponse
> = z.object({
  id: z.string(),
  deleted: z.boolean(),
  object: DeleteMessageResponseObject$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteMessageResponse$ {
  /** @deprecated use `DeleteMessageResponse$inboundSchema` instead. */
  export const inboundSchema = DeleteMessageResponse$inboundSchema;
  /** @deprecated use `DeleteMessageResponse$outboundSchema` instead. */
  export const outboundSchema = DeleteMessageResponse$outboundSchema;
  /** @deprecated use `DeleteMessageResponse$Outbound` instead. */
  export type Outbound = DeleteMessageResponse$Outbound;
}

export function deleteMessageResponseToJSON(
  deleteMessageResponse: DeleteMessageResponse,
): string {
  return JSON.stringify(
    DeleteMessageResponse$outboundSchema.parse(deleteMessageResponse),
  );
}

export function deleteMessageResponseFromJSON(
  jsonString: string,
): SafeParseResult<DeleteMessageResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteMessageResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteMessageResponse' from JSON`,
  );
}

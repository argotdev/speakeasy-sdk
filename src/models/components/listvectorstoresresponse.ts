/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  VectorStoreObject,
  VectorStoreObject$inboundSchema,
  VectorStoreObject$Outbound,
  VectorStoreObject$outboundSchema,
} from "./vectorstoreobject.js";

export type ListVectorStoresResponse = {
  object: string;
  data: Array<VectorStoreObject>;
  firstId: string;
  lastId: string;
  hasMore: boolean;
};

/** @internal */
export const ListVectorStoresResponse$inboundSchema: z.ZodType<
  ListVectorStoresResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  object: z.string(),
  data: z.array(VectorStoreObject$inboundSchema),
  first_id: z.string(),
  last_id: z.string(),
  has_more: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    "first_id": "firstId",
    "last_id": "lastId",
    "has_more": "hasMore",
  });
});

/** @internal */
export type ListVectorStoresResponse$Outbound = {
  object: string;
  data: Array<VectorStoreObject$Outbound>;
  first_id: string;
  last_id: string;
  has_more: boolean;
};

/** @internal */
export const ListVectorStoresResponse$outboundSchema: z.ZodType<
  ListVectorStoresResponse$Outbound,
  z.ZodTypeDef,
  ListVectorStoresResponse
> = z.object({
  object: z.string(),
  data: z.array(VectorStoreObject$outboundSchema),
  firstId: z.string(),
  lastId: z.string(),
  hasMore: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    firstId: "first_id",
    lastId: "last_id",
    hasMore: "has_more",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListVectorStoresResponse$ {
  /** @deprecated use `ListVectorStoresResponse$inboundSchema` instead. */
  export const inboundSchema = ListVectorStoresResponse$inboundSchema;
  /** @deprecated use `ListVectorStoresResponse$outboundSchema` instead. */
  export const outboundSchema = ListVectorStoresResponse$outboundSchema;
  /** @deprecated use `ListVectorStoresResponse$Outbound` instead. */
  export type Outbound = ListVectorStoresResponse$Outbound;
}

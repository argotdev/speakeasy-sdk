/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type CompleteUploadRequest = {
  /**
   * The ordered list of Part IDs.
   *
   * @remarks
   */
  partIds: Array<string>;
  /**
   * The optional md5 checksum for the file contents to verify if the bytes uploaded matches what you expect.
   *
   * @remarks
   */
  md5?: string | undefined;
};

/** @internal */
export const CompleteUploadRequest$inboundSchema: z.ZodType<
  CompleteUploadRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  part_ids: z.array(z.string()),
  md5: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "part_ids": "partIds",
  });
});

/** @internal */
export type CompleteUploadRequest$Outbound = {
  part_ids: Array<string>;
  md5?: string | undefined;
};

/** @internal */
export const CompleteUploadRequest$outboundSchema: z.ZodType<
  CompleteUploadRequest$Outbound,
  z.ZodTypeDef,
  CompleteUploadRequest
> = z.object({
  partIds: z.array(z.string()),
  md5: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    partIds: "part_ids",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CompleteUploadRequest$ {
  /** @deprecated use `CompleteUploadRequest$inboundSchema` instead. */
  export const inboundSchema = CompleteUploadRequest$inboundSchema;
  /** @deprecated use `CompleteUploadRequest$outboundSchema` instead. */
  export const outboundSchema = CompleteUploadRequest$outboundSchema;
  /** @deprecated use `CompleteUploadRequest$Outbound` instead. */
  export type Outbound = CompleteUploadRequest$Outbound;
}

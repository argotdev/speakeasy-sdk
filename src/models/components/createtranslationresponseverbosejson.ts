/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  TranscriptionSegment,
  TranscriptionSegment$inboundSchema,
  TranscriptionSegment$Outbound,
  TranscriptionSegment$outboundSchema,
} from "./transcriptionsegment.js";

export type CreateTranslationResponseVerboseJson = {
  /**
   * The language of the output translation (always `english`).
   */
  language: string;
  /**
   * The duration of the input audio.
   */
  duration: number;
  /**
   * The translated text.
   */
  text: string;
  /**
   * Segments of the translated text and their corresponding details.
   */
  segments?: Array<TranscriptionSegment> | undefined;
};

/** @internal */
export const CreateTranslationResponseVerboseJson$inboundSchema: z.ZodType<
  CreateTranslationResponseVerboseJson,
  z.ZodTypeDef,
  unknown
> = z.object({
  language: z.string(),
  duration: z.number(),
  text: z.string(),
  segments: z.array(TranscriptionSegment$inboundSchema).optional(),
});

/** @internal */
export type CreateTranslationResponseVerboseJson$Outbound = {
  language: string;
  duration: number;
  text: string;
  segments?: Array<TranscriptionSegment$Outbound> | undefined;
};

/** @internal */
export const CreateTranslationResponseVerboseJson$outboundSchema: z.ZodType<
  CreateTranslationResponseVerboseJson$Outbound,
  z.ZodTypeDef,
  CreateTranslationResponseVerboseJson
> = z.object({
  language: z.string(),
  duration: z.number(),
  text: z.string(),
  segments: z.array(TranscriptionSegment$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTranslationResponseVerboseJson$ {
  /** @deprecated use `CreateTranslationResponseVerboseJson$inboundSchema` instead. */
  export const inboundSchema =
    CreateTranslationResponseVerboseJson$inboundSchema;
  /** @deprecated use `CreateTranslationResponseVerboseJson$outboundSchema` instead. */
  export const outboundSchema =
    CreateTranslationResponseVerboseJson$outboundSchema;
  /** @deprecated use `CreateTranslationResponseVerboseJson$Outbound` instead. */
  export type Outbound = CreateTranslationResponseVerboseJson$Outbound;
}

export function createTranslationResponseVerboseJsonToJSON(
  createTranslationResponseVerboseJson: CreateTranslationResponseVerboseJson,
): string {
  return JSON.stringify(
    CreateTranslationResponseVerboseJson$outboundSchema.parse(
      createTranslationResponseVerboseJson,
    ),
  );
}

export function createTranslationResponseVerboseJsonFromJSON(
  jsonString: string,
): SafeParseResult<CreateTranslationResponseVerboseJson, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateTranslationResponseVerboseJson$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateTranslationResponseVerboseJson' from JSON`,
  );
}

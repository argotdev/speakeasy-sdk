/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import {
  ResponseFormatJsonObject,
  ResponseFormatJsonObject$inboundSchema,
  ResponseFormatJsonObject$Outbound,
  ResponseFormatJsonObject$outboundSchema,
} from "./responseformatjsonobject.js";
import {
  ResponseFormatJsonSchema,
  ResponseFormatJsonSchema$inboundSchema,
  ResponseFormatJsonSchema$Outbound,
  ResponseFormatJsonSchema$outboundSchema,
} from "./responseformatjsonschema.js";
import {
  ResponseFormatText,
  ResponseFormatText$inboundSchema,
  ResponseFormatText$Outbound,
  ResponseFormatText$outboundSchema,
} from "./responseformattext.js";

/**
 * `auto` is the default value
 *
 * @remarks
 */
export const AssistantsApiResponseFormatOption1 = {
  Auto: "auto",
} as const;
/**
 * `auto` is the default value
 *
 * @remarks
 */
export type AssistantsApiResponseFormatOption1 = ClosedEnum<
  typeof AssistantsApiResponseFormatOption1
>;

/**
 * Specifies the format that the model must output. Compatible with [GPT-4o](/docs/models/gpt-4o), [GPT-4 Turbo](/docs/models/gpt-4-turbo-and-gpt-4), and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.
 *
 * @remarks
 *
 * Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema. Learn more in the [Structured Outputs guide](/docs/guides/structured-outputs).
 *
 * Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
 *
 * **Important:** when using JSON mode, you **must** also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if `finish_reason="length"`, which indicates the generation exceeded `max_tokens` or the conversation exceeded the max context length.
 */
export type AssistantsApiResponseFormatOption =
  | ResponseFormatText
  | ResponseFormatJsonObject
  | ResponseFormatJsonSchema
  | AssistantsApiResponseFormatOption1;

/** @internal */
export const AssistantsApiResponseFormatOption1$inboundSchema: z.ZodNativeEnum<
  typeof AssistantsApiResponseFormatOption1
> = z.nativeEnum(AssistantsApiResponseFormatOption1);

/** @internal */
export const AssistantsApiResponseFormatOption1$outboundSchema: z.ZodNativeEnum<
  typeof AssistantsApiResponseFormatOption1
> = AssistantsApiResponseFormatOption1$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssistantsApiResponseFormatOption1$ {
  /** @deprecated use `AssistantsApiResponseFormatOption1$inboundSchema` instead. */
  export const inboundSchema = AssistantsApiResponseFormatOption1$inboundSchema;
  /** @deprecated use `AssistantsApiResponseFormatOption1$outboundSchema` instead. */
  export const outboundSchema =
    AssistantsApiResponseFormatOption1$outboundSchema;
}

/** @internal */
export const AssistantsApiResponseFormatOption$inboundSchema: z.ZodType<
  AssistantsApiResponseFormatOption,
  z.ZodTypeDef,
  unknown
> = z.union([
  ResponseFormatText$inboundSchema,
  ResponseFormatJsonObject$inboundSchema,
  ResponseFormatJsonSchema$inboundSchema,
  AssistantsApiResponseFormatOption1$inboundSchema,
]);

/** @internal */
export type AssistantsApiResponseFormatOption$Outbound =
  | ResponseFormatText$Outbound
  | ResponseFormatJsonObject$Outbound
  | ResponseFormatJsonSchema$Outbound
  | string;

/** @internal */
export const AssistantsApiResponseFormatOption$outboundSchema: z.ZodType<
  AssistantsApiResponseFormatOption$Outbound,
  z.ZodTypeDef,
  AssistantsApiResponseFormatOption
> = z.union([
  ResponseFormatText$outboundSchema,
  ResponseFormatJsonObject$outboundSchema,
  ResponseFormatJsonSchema$outboundSchema,
  AssistantsApiResponseFormatOption1$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssistantsApiResponseFormatOption$ {
  /** @deprecated use `AssistantsApiResponseFormatOption$inboundSchema` instead. */
  export const inboundSchema = AssistantsApiResponseFormatOption$inboundSchema;
  /** @deprecated use `AssistantsApiResponseFormatOption$outboundSchema` instead. */
  export const outboundSchema =
    AssistantsApiResponseFormatOption$outboundSchema;
  /** @deprecated use `AssistantsApiResponseFormatOption$Outbound` instead. */
  export type Outbound = AssistantsApiResponseFormatOption$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * The type of the tool. If type is `function`, the function name must be set
 */
export const AssistantsNamedToolChoiceType = {
  Function: "function",
  CodeInterpreter: "code_interpreter",
  FileSearch: "file_search",
} as const;
/**
 * The type of the tool. If type is `function`, the function name must be set
 */
export type AssistantsNamedToolChoiceType = ClosedEnum<
  typeof AssistantsNamedToolChoiceType
>;

export type AssistantsNamedToolChoiceFunction = {
  /**
   * The name of the function to call.
   */
  name: string;
};

/**
 * Specifies a tool the model should use. Use to force the model to call a specific tool.
 */
export type AssistantsNamedToolChoice = {
  /**
   * The type of the tool. If type is `function`, the function name must be set
   */
  type: AssistantsNamedToolChoiceType;
  function?: AssistantsNamedToolChoiceFunction | undefined;
};

/** @internal */
export const AssistantsNamedToolChoiceType$inboundSchema: z.ZodNativeEnum<
  typeof AssistantsNamedToolChoiceType
> = z.nativeEnum(AssistantsNamedToolChoiceType);

/** @internal */
export const AssistantsNamedToolChoiceType$outboundSchema: z.ZodNativeEnum<
  typeof AssistantsNamedToolChoiceType
> = AssistantsNamedToolChoiceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssistantsNamedToolChoiceType$ {
  /** @deprecated use `AssistantsNamedToolChoiceType$inboundSchema` instead. */
  export const inboundSchema = AssistantsNamedToolChoiceType$inboundSchema;
  /** @deprecated use `AssistantsNamedToolChoiceType$outboundSchema` instead. */
  export const outboundSchema = AssistantsNamedToolChoiceType$outboundSchema;
}

/** @internal */
export const AssistantsNamedToolChoiceFunction$inboundSchema: z.ZodType<
  AssistantsNamedToolChoiceFunction,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
});

/** @internal */
export type AssistantsNamedToolChoiceFunction$Outbound = {
  name: string;
};

/** @internal */
export const AssistantsNamedToolChoiceFunction$outboundSchema: z.ZodType<
  AssistantsNamedToolChoiceFunction$Outbound,
  z.ZodTypeDef,
  AssistantsNamedToolChoiceFunction
> = z.object({
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssistantsNamedToolChoiceFunction$ {
  /** @deprecated use `AssistantsNamedToolChoiceFunction$inboundSchema` instead. */
  export const inboundSchema = AssistantsNamedToolChoiceFunction$inboundSchema;
  /** @deprecated use `AssistantsNamedToolChoiceFunction$outboundSchema` instead. */
  export const outboundSchema =
    AssistantsNamedToolChoiceFunction$outboundSchema;
  /** @deprecated use `AssistantsNamedToolChoiceFunction$Outbound` instead. */
  export type Outbound = AssistantsNamedToolChoiceFunction$Outbound;
}

/** @internal */
export const AssistantsNamedToolChoice$inboundSchema: z.ZodType<
  AssistantsNamedToolChoice,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: AssistantsNamedToolChoiceType$inboundSchema,
  function: z.lazy(() => AssistantsNamedToolChoiceFunction$inboundSchema)
    .optional(),
});

/** @internal */
export type AssistantsNamedToolChoice$Outbound = {
  type: string;
  function?: AssistantsNamedToolChoiceFunction$Outbound | undefined;
};

/** @internal */
export const AssistantsNamedToolChoice$outboundSchema: z.ZodType<
  AssistantsNamedToolChoice$Outbound,
  z.ZodTypeDef,
  AssistantsNamedToolChoice
> = z.object({
  type: AssistantsNamedToolChoiceType$outboundSchema,
  function: z.lazy(() => AssistantsNamedToolChoiceFunction$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssistantsNamedToolChoice$ {
  /** @deprecated use `AssistantsNamedToolChoice$inboundSchema` instead. */
  export const inboundSchema = AssistantsNamedToolChoice$inboundSchema;
  /** @deprecated use `AssistantsNamedToolChoice$outboundSchema` instead. */
  export const outboundSchema = AssistantsNamedToolChoice$outboundSchema;
  /** @deprecated use `AssistantsNamedToolChoice$Outbound` instead. */
  export type Outbound = AssistantsNamedToolChoice$Outbound;
}

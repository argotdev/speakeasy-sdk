/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import {
  ChatCompletionRequestToolMessageContentPart,
  ChatCompletionRequestToolMessageContentPart$inboundSchema,
  ChatCompletionRequestToolMessageContentPart$Outbound,
  ChatCompletionRequestToolMessageContentPart$outboundSchema,
} from "./chatcompletionrequesttoolmessagecontentpart.js";

/**
 * The role of the messages author, in this case `tool`.
 */
export const ChatCompletionRequestToolMessageRole = {
  Tool: "tool",
} as const;
/**
 * The role of the messages author, in this case `tool`.
 */
export type ChatCompletionRequestToolMessageRole = ClosedEnum<
  typeof ChatCompletionRequestToolMessageRole
>;

/**
 * The contents of the tool message.
 */
export type ChatCompletionRequestToolMessageContent =
  | string
  | Array<ChatCompletionRequestToolMessageContentPart>;

export type ChatCompletionRequestToolMessage = {
  /**
   * The role of the messages author, in this case `tool`.
   */
  role: ChatCompletionRequestToolMessageRole;
  /**
   * The contents of the tool message.
   */
  content: string | Array<ChatCompletionRequestToolMessageContentPart>;
  /**
   * Tool call that this message is responding to.
   */
  toolCallId: string;
};

/** @internal */
export const ChatCompletionRequestToolMessageRole$inboundSchema:
  z.ZodNativeEnum<typeof ChatCompletionRequestToolMessageRole> = z.nativeEnum(
    ChatCompletionRequestToolMessageRole,
  );

/** @internal */
export const ChatCompletionRequestToolMessageRole$outboundSchema:
  z.ZodNativeEnum<typeof ChatCompletionRequestToolMessageRole> =
    ChatCompletionRequestToolMessageRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionRequestToolMessageRole$ {
  /** @deprecated use `ChatCompletionRequestToolMessageRole$inboundSchema` instead. */
  export const inboundSchema =
    ChatCompletionRequestToolMessageRole$inboundSchema;
  /** @deprecated use `ChatCompletionRequestToolMessageRole$outboundSchema` instead. */
  export const outboundSchema =
    ChatCompletionRequestToolMessageRole$outboundSchema;
}

/** @internal */
export const ChatCompletionRequestToolMessageContent$inboundSchema: z.ZodType<
  ChatCompletionRequestToolMessageContent,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.string(),
  z.array(ChatCompletionRequestToolMessageContentPart$inboundSchema),
]);

/** @internal */
export type ChatCompletionRequestToolMessageContent$Outbound =
  | string
  | Array<ChatCompletionRequestToolMessageContentPart$Outbound>;

/** @internal */
export const ChatCompletionRequestToolMessageContent$outboundSchema: z.ZodType<
  ChatCompletionRequestToolMessageContent$Outbound,
  z.ZodTypeDef,
  ChatCompletionRequestToolMessageContent
> = z.union([
  z.string(),
  z.array(ChatCompletionRequestToolMessageContentPart$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionRequestToolMessageContent$ {
  /** @deprecated use `ChatCompletionRequestToolMessageContent$inboundSchema` instead. */
  export const inboundSchema =
    ChatCompletionRequestToolMessageContent$inboundSchema;
  /** @deprecated use `ChatCompletionRequestToolMessageContent$outboundSchema` instead. */
  export const outboundSchema =
    ChatCompletionRequestToolMessageContent$outboundSchema;
  /** @deprecated use `ChatCompletionRequestToolMessageContent$Outbound` instead. */
  export type Outbound = ChatCompletionRequestToolMessageContent$Outbound;
}

/** @internal */
export const ChatCompletionRequestToolMessage$inboundSchema: z.ZodType<
  ChatCompletionRequestToolMessage,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: ChatCompletionRequestToolMessageRole$inboundSchema,
  content: z.union([
    z.string(),
    z.array(ChatCompletionRequestToolMessageContentPart$inboundSchema),
  ]),
  tool_call_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "tool_call_id": "toolCallId",
  });
});

/** @internal */
export type ChatCompletionRequestToolMessage$Outbound = {
  role: string;
  content: string | Array<ChatCompletionRequestToolMessageContentPart$Outbound>;
  tool_call_id: string;
};

/** @internal */
export const ChatCompletionRequestToolMessage$outboundSchema: z.ZodType<
  ChatCompletionRequestToolMessage$Outbound,
  z.ZodTypeDef,
  ChatCompletionRequestToolMessage
> = z.object({
  role: ChatCompletionRequestToolMessageRole$outboundSchema,
  content: z.union([
    z.string(),
    z.array(ChatCompletionRequestToolMessageContentPart$outboundSchema),
  ]),
  toolCallId: z.string(),
}).transform((v) => {
  return remap$(v, {
    toolCallId: "tool_call_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionRequestToolMessage$ {
  /** @deprecated use `ChatCompletionRequestToolMessage$inboundSchema` instead. */
  export const inboundSchema = ChatCompletionRequestToolMessage$inboundSchema;
  /** @deprecated use `ChatCompletionRequestToolMessage$outboundSchema` instead. */
  export const outboundSchema = ChatCompletionRequestToolMessage$outboundSchema;
  /** @deprecated use `ChatCompletionRequestToolMessage$Outbound` instead. */
  export type Outbound = ChatCompletionRequestToolMessage$Outbound;
}

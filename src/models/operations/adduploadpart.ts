/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type AddUploadPartRequest = {
  /**
   * The ID of the Upload.
   *
   * @remarks
   */
  uploadId: string;
  addUploadPartRequest: components.AddUploadPartRequest;
};

/** @internal */
export const AddUploadPartRequest$inboundSchema: z.ZodType<
  AddUploadPartRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  upload_id: z.string(),
  AddUploadPartRequest: components.AddUploadPartRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "upload_id": "uploadId",
    "AddUploadPartRequest": "addUploadPartRequest",
  });
});

/** @internal */
export type AddUploadPartRequest$Outbound = {
  upload_id: string;
  AddUploadPartRequest: components.AddUploadPartRequest$Outbound;
};

/** @internal */
export const AddUploadPartRequest$outboundSchema: z.ZodType<
  AddUploadPartRequest$Outbound,
  z.ZodTypeDef,
  AddUploadPartRequest
> = z.object({
  uploadId: z.string(),
  addUploadPartRequest: components.AddUploadPartRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    uploadId: "upload_id",
    addUploadPartRequest: "AddUploadPartRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddUploadPartRequest$ {
  /** @deprecated use `AddUploadPartRequest$inboundSchema` instead. */
  export const inboundSchema = AddUploadPartRequest$inboundSchema;
  /** @deprecated use `AddUploadPartRequest$outboundSchema` instead. */
  export const outboundSchema = AddUploadPartRequest$outboundSchema;
  /** @deprecated use `AddUploadPartRequest$Outbound` instead. */
  export type Outbound = AddUploadPartRequest$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type DeleteUserRequest = {
  /**
   * The ID of the user.
   */
  userId: string;
};

/** @internal */
export const DeleteUserRequest$inboundSchema: z.ZodType<
  DeleteUserRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  user_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "user_id": "userId",
  });
});

/** @internal */
export type DeleteUserRequest$Outbound = {
  user_id: string;
};

/** @internal */
export const DeleteUserRequest$outboundSchema: z.ZodType<
  DeleteUserRequest$Outbound,
  z.ZodTypeDef,
  DeleteUserRequest
> = z.object({
  userId: z.string(),
}).transform((v) => {
  return remap$(v, {
    userId: "user_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteUserRequest$ {
  /** @deprecated use `DeleteUserRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteUserRequest$inboundSchema;
  /** @deprecated use `DeleteUserRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteUserRequest$outboundSchema;
  /** @deprecated use `DeleteUserRequest$Outbound` instead. */
  export type Outbound = DeleteUserRequest$Outbound;
}

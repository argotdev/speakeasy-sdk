/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type CancelBatchRequest = {
  /**
   * The ID of the batch to cancel.
   */
  batchId: string;
};

/** @internal */
export const CancelBatchRequest$inboundSchema: z.ZodType<
  CancelBatchRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  batch_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "batch_id": "batchId",
  });
});

/** @internal */
export type CancelBatchRequest$Outbound = {
  batch_id: string;
};

/** @internal */
export const CancelBatchRequest$outboundSchema: z.ZodType<
  CancelBatchRequest$Outbound,
  z.ZodTypeDef,
  CancelBatchRequest
> = z.object({
  batchId: z.string(),
}).transform((v) => {
  return remap$(v, {
    batchId: "batch_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CancelBatchRequest$ {
  /** @deprecated use `CancelBatchRequest$inboundSchema` instead. */
  export const inboundSchema = CancelBatchRequest$inboundSchema;
  /** @deprecated use `CancelBatchRequest$outboundSchema` instead. */
  export const outboundSchema = CancelBatchRequest$outboundSchema;
  /** @deprecated use `CancelBatchRequest$Outbound` instead. */
  export type Outbound = CancelBatchRequest$Outbound;
}

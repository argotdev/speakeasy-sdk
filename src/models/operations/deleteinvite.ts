/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteInviteRequest = {
  /**
   * The ID of the invite to delete.
   */
  inviteId: string;
};

/** @internal */
export const DeleteInviteRequest$inboundSchema: z.ZodType<
  DeleteInviteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  invite_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "invite_id": "inviteId",
  });
});

/** @internal */
export type DeleteInviteRequest$Outbound = {
  invite_id: string;
};

/** @internal */
export const DeleteInviteRequest$outboundSchema: z.ZodType<
  DeleteInviteRequest$Outbound,
  z.ZodTypeDef,
  DeleteInviteRequest
> = z.object({
  inviteId: z.string(),
}).transform((v) => {
  return remap$(v, {
    inviteId: "invite_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteInviteRequest$ {
  /** @deprecated use `DeleteInviteRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteInviteRequest$inboundSchema;
  /** @deprecated use `DeleteInviteRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteInviteRequest$outboundSchema;
  /** @deprecated use `DeleteInviteRequest$Outbound` instead. */
  export type Outbound = DeleteInviteRequest$Outbound;
}

export function deleteInviteRequestToJSON(
  deleteInviteRequest: DeleteInviteRequest,
): string {
  return JSON.stringify(
    DeleteInviteRequest$outboundSchema.parse(deleteInviteRequest),
  );
}

export function deleteInviteRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteInviteRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteInviteRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteInviteRequest' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type RetrieveProjectRequest = {
  /**
   * The ID of the project.
   */
  projectId: string;
};

/** @internal */
export const RetrieveProjectRequest$inboundSchema: z.ZodType<
  RetrieveProjectRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  project_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "project_id": "projectId",
  });
});

/** @internal */
export type RetrieveProjectRequest$Outbound = {
  project_id: string;
};

/** @internal */
export const RetrieveProjectRequest$outboundSchema: z.ZodType<
  RetrieveProjectRequest$Outbound,
  z.ZodTypeDef,
  RetrieveProjectRequest
> = z.object({
  projectId: z.string(),
}).transform((v) => {
  return remap$(v, {
    projectId: "project_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetrieveProjectRequest$ {
  /** @deprecated use `RetrieveProjectRequest$inboundSchema` instead. */
  export const inboundSchema = RetrieveProjectRequest$inboundSchema;
  /** @deprecated use `RetrieveProjectRequest$outboundSchema` instead. */
  export const outboundSchema = RetrieveProjectRequest$outboundSchema;
  /** @deprecated use `RetrieveProjectRequest$Outbound` instead. */
  export type Outbound = RetrieveProjectRequest$Outbound;
}

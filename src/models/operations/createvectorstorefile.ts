/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateVectorStoreFileRequest = {
  /**
   * The ID of the vector store for which to create a File.
   *
   * @remarks
   */
  vectorStoreId: string;
  createVectorStoreFileRequest: components.CreateVectorStoreFileRequest;
};

/** @internal */
export const CreateVectorStoreFileRequest$inboundSchema: z.ZodType<
  CreateVectorStoreFileRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  vector_store_id: z.string(),
  CreateVectorStoreFileRequest:
    components.CreateVectorStoreFileRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "vector_store_id": "vectorStoreId",
    "CreateVectorStoreFileRequest": "createVectorStoreFileRequest",
  });
});

/** @internal */
export type CreateVectorStoreFileRequest$Outbound = {
  vector_store_id: string;
  CreateVectorStoreFileRequest:
    components.CreateVectorStoreFileRequest$Outbound;
};

/** @internal */
export const CreateVectorStoreFileRequest$outboundSchema: z.ZodType<
  CreateVectorStoreFileRequest$Outbound,
  z.ZodTypeDef,
  CreateVectorStoreFileRequest
> = z.object({
  vectorStoreId: z.string(),
  createVectorStoreFileRequest:
    components.CreateVectorStoreFileRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    vectorStoreId: "vector_store_id",
    createVectorStoreFileRequest: "CreateVectorStoreFileRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateVectorStoreFileRequest$ {
  /** @deprecated use `CreateVectorStoreFileRequest$inboundSchema` instead. */
  export const inboundSchema = CreateVectorStoreFileRequest$inboundSchema;
  /** @deprecated use `CreateVectorStoreFileRequest$outboundSchema` instead. */
  export const outboundSchema = CreateVectorStoreFileRequest$outboundSchema;
  /** @deprecated use `CreateVectorStoreFileRequest$Outbound` instead. */
  export type Outbound = CreateVectorStoreFileRequest$Outbound;
}

export function createVectorStoreFileRequestToJSON(
  createVectorStoreFileRequest: CreateVectorStoreFileRequest,
): string {
  return JSON.stringify(
    CreateVectorStoreFileRequest$outboundSchema.parse(
      createVectorStoreFileRequest,
    ),
  );
}

export function createVectorStoreFileRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateVectorStoreFileRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateVectorStoreFileRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateVectorStoreFileRequest' from JSON`,
  );
}

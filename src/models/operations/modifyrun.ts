/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ModifyRunRequest = {
  /**
   * The ID of the [thread](/docs/api-reference/threads) that was run.
   */
  threadId: string;
  /**
   * The ID of the run to modify.
   */
  runId: string;
  modifyRunRequest: components.ModifyRunRequest;
};

/** @internal */
export const ModifyRunRequest$inboundSchema: z.ZodType<
  ModifyRunRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  thread_id: z.string(),
  run_id: z.string(),
  ModifyRunRequest: components.ModifyRunRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "thread_id": "threadId",
    "run_id": "runId",
    "ModifyRunRequest": "modifyRunRequest",
  });
});

/** @internal */
export type ModifyRunRequest$Outbound = {
  thread_id: string;
  run_id: string;
  ModifyRunRequest: components.ModifyRunRequest$Outbound;
};

/** @internal */
export const ModifyRunRequest$outboundSchema: z.ZodType<
  ModifyRunRequest$Outbound,
  z.ZodTypeDef,
  ModifyRunRequest
> = z.object({
  threadId: z.string(),
  runId: z.string(),
  modifyRunRequest: components.ModifyRunRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    threadId: "thread_id",
    runId: "run_id",
    modifyRunRequest: "ModifyRunRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ModifyRunRequest$ {
  /** @deprecated use `ModifyRunRequest$inboundSchema` instead. */
  export const inboundSchema = ModifyRunRequest$inboundSchema;
  /** @deprecated use `ModifyRunRequest$outboundSchema` instead. */
  export const outboundSchema = ModifyRunRequest$outboundSchema;
  /** @deprecated use `ModifyRunRequest$Outbound` instead. */
  export type Outbound = ModifyRunRequest$Outbound;
}

export function modifyRunRequestToJSON(
  modifyRunRequest: ModifyRunRequest,
): string {
  return JSON.stringify(
    ModifyRunRequest$outboundSchema.parse(modifyRunRequest),
  );
}

export function modifyRunRequestFromJSON(
  jsonString: string,
): SafeParseResult<ModifyRunRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ModifyRunRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ModifyRunRequest' from JSON`,
  );
}

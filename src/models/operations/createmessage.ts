/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type CreateMessageRequest = {
  /**
   * The ID of the [thread](/docs/api-reference/threads) to create a message for.
   */
  threadId: string;
  createMessageRequest: components.CreateMessageRequest;
};

/** @internal */
export const CreateMessageRequest$inboundSchema: z.ZodType<
  CreateMessageRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  thread_id: z.string(),
  CreateMessageRequest: components.CreateMessageRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "thread_id": "threadId",
    "CreateMessageRequest": "createMessageRequest",
  });
});

/** @internal */
export type CreateMessageRequest$Outbound = {
  thread_id: string;
  CreateMessageRequest: components.CreateMessageRequest$Outbound;
};

/** @internal */
export const CreateMessageRequest$outboundSchema: z.ZodType<
  CreateMessageRequest$Outbound,
  z.ZodTypeDef,
  CreateMessageRequest
> = z.object({
  threadId: z.string(),
  createMessageRequest: components.CreateMessageRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    threadId: "thread_id",
    createMessageRequest: "CreateMessageRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateMessageRequest$ {
  /** @deprecated use `CreateMessageRequest$inboundSchema` instead. */
  export const inboundSchema = CreateMessageRequest$inboundSchema;
  /** @deprecated use `CreateMessageRequest$outboundSchema` instead. */
  export const outboundSchema = CreateMessageRequest$outboundSchema;
  /** @deprecated use `CreateMessageRequest$Outbound` instead. */
  export type Outbound = CreateMessageRequest$Outbound;
}

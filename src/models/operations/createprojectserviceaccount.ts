/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateProjectServiceAccountRequest = {
  /**
   * The ID of the project.
   */
  projectId: string;
  /**
   * The project service account create request payload.
   */
  projectServiceAccountCreateRequest:
    components.ProjectServiceAccountCreateRequest;
};

/** @internal */
export const CreateProjectServiceAccountRequest$inboundSchema: z.ZodType<
  CreateProjectServiceAccountRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  project_id: z.string(),
  ProjectServiceAccountCreateRequest:
    components.ProjectServiceAccountCreateRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "project_id": "projectId",
    "ProjectServiceAccountCreateRequest": "projectServiceAccountCreateRequest",
  });
});

/** @internal */
export type CreateProjectServiceAccountRequest$Outbound = {
  project_id: string;
  ProjectServiceAccountCreateRequest:
    components.ProjectServiceAccountCreateRequest$Outbound;
};

/** @internal */
export const CreateProjectServiceAccountRequest$outboundSchema: z.ZodType<
  CreateProjectServiceAccountRequest$Outbound,
  z.ZodTypeDef,
  CreateProjectServiceAccountRequest
> = z.object({
  projectId: z.string(),
  projectServiceAccountCreateRequest:
    components.ProjectServiceAccountCreateRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    projectId: "project_id",
    projectServiceAccountCreateRequest: "ProjectServiceAccountCreateRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateProjectServiceAccountRequest$ {
  /** @deprecated use `CreateProjectServiceAccountRequest$inboundSchema` instead. */
  export const inboundSchema = CreateProjectServiceAccountRequest$inboundSchema;
  /** @deprecated use `CreateProjectServiceAccountRequest$outboundSchema` instead. */
  export const outboundSchema =
    CreateProjectServiceAccountRequest$outboundSchema;
  /** @deprecated use `CreateProjectServiceAccountRequest$Outbound` instead. */
  export type Outbound = CreateProjectServiceAccountRequest$Outbound;
}

export function createProjectServiceAccountRequestToJSON(
  createProjectServiceAccountRequest: CreateProjectServiceAccountRequest,
): string {
  return JSON.stringify(
    CreateProjectServiceAccountRequest$outboundSchema.parse(
      createProjectServiceAccountRequest,
    ),
  );
}

export function createProjectServiceAccountRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateProjectServiceAccountRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateProjectServiceAccountRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateProjectServiceAccountRequest' from JSON`,
  );
}

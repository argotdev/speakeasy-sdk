/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type ModifyThreadRequest = {
  /**
   * The ID of the thread to modify. Only the `metadata` can be modified.
   */
  threadId: string;
  modifyThreadRequest: components.ModifyThreadRequest;
};

/** @internal */
export const ModifyThreadRequest$inboundSchema: z.ZodType<
  ModifyThreadRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  thread_id: z.string(),
  ModifyThreadRequest: components.ModifyThreadRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "thread_id": "threadId",
    "ModifyThreadRequest": "modifyThreadRequest",
  });
});

/** @internal */
export type ModifyThreadRequest$Outbound = {
  thread_id: string;
  ModifyThreadRequest: components.ModifyThreadRequest$Outbound;
};

/** @internal */
export const ModifyThreadRequest$outboundSchema: z.ZodType<
  ModifyThreadRequest$Outbound,
  z.ZodTypeDef,
  ModifyThreadRequest
> = z.object({
  threadId: z.string(),
  modifyThreadRequest: components.ModifyThreadRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    threadId: "thread_id",
    modifyThreadRequest: "ModifyThreadRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ModifyThreadRequest$ {
  /** @deprecated use `ModifyThreadRequest$inboundSchema` instead. */
  export const inboundSchema = ModifyThreadRequest$inboundSchema;
  /** @deprecated use `ModifyThreadRequest$outboundSchema` instead. */
  export const outboundSchema = ModifyThreadRequest$outboundSchema;
  /** @deprecated use `ModifyThreadRequest$Outbound` instead. */
  export type Outbound = ModifyThreadRequest$Outbound;
}

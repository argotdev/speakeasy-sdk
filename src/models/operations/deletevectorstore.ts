/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type DeleteVectorStoreRequest = {
  /**
   * The ID of the vector store to delete.
   */
  vectorStoreId: string;
};

/** @internal */
export const DeleteVectorStoreRequest$inboundSchema: z.ZodType<
  DeleteVectorStoreRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  vector_store_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "vector_store_id": "vectorStoreId",
  });
});

/** @internal */
export type DeleteVectorStoreRequest$Outbound = {
  vector_store_id: string;
};

/** @internal */
export const DeleteVectorStoreRequest$outboundSchema: z.ZodType<
  DeleteVectorStoreRequest$Outbound,
  z.ZodTypeDef,
  DeleteVectorStoreRequest
> = z.object({
  vectorStoreId: z.string(),
}).transform((v) => {
  return remap$(v, {
    vectorStoreId: "vector_store_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteVectorStoreRequest$ {
  /** @deprecated use `DeleteVectorStoreRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteVectorStoreRequest$inboundSchema;
  /** @deprecated use `DeleteVectorStoreRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteVectorStoreRequest$outboundSchema;
  /** @deprecated use `DeleteVectorStoreRequest$Outbound` instead. */
  export type Outbound = DeleteVectorStoreRequest$Outbound;
}

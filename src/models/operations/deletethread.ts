/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteThreadRequest = {
  /**
   * The ID of the thread to delete.
   */
  threadId: string;
};

/** @internal */
export const DeleteThreadRequest$inboundSchema: z.ZodType<
  DeleteThreadRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  thread_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "thread_id": "threadId",
  });
});

/** @internal */
export type DeleteThreadRequest$Outbound = {
  thread_id: string;
};

/** @internal */
export const DeleteThreadRequest$outboundSchema: z.ZodType<
  DeleteThreadRequest$Outbound,
  z.ZodTypeDef,
  DeleteThreadRequest
> = z.object({
  threadId: z.string(),
}).transform((v) => {
  return remap$(v, {
    threadId: "thread_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteThreadRequest$ {
  /** @deprecated use `DeleteThreadRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteThreadRequest$inboundSchema;
  /** @deprecated use `DeleteThreadRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteThreadRequest$outboundSchema;
  /** @deprecated use `DeleteThreadRequest$Outbound` instead. */
  export type Outbound = DeleteThreadRequest$Outbound;
}

export function deleteThreadRequestToJSON(
  deleteThreadRequest: DeleteThreadRequest,
): string {
  return JSON.stringify(
    DeleteThreadRequest$outboundSchema.parse(deleteThreadRequest),
  );
}

export function deleteThreadRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteThreadRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteThreadRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteThreadRequest' from JSON`,
  );
}

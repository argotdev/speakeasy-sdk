/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type GetThreadRequest = {
  /**
   * The ID of the thread to retrieve.
   */
  threadId: string;
};

/** @internal */
export const GetThreadRequest$inboundSchema: z.ZodType<
  GetThreadRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  thread_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "thread_id": "threadId",
  });
});

/** @internal */
export type GetThreadRequest$Outbound = {
  thread_id: string;
};

/** @internal */
export const GetThreadRequest$outboundSchema: z.ZodType<
  GetThreadRequest$Outbound,
  z.ZodTypeDef,
  GetThreadRequest
> = z.object({
  threadId: z.string(),
}).transform((v) => {
  return remap$(v, {
    threadId: "thread_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetThreadRequest$ {
  /** @deprecated use `GetThreadRequest$inboundSchema` instead. */
  export const inboundSchema = GetThreadRequest$inboundSchema;
  /** @deprecated use `GetThreadRequest$outboundSchema` instead. */
  export const outboundSchema = GetThreadRequest$outboundSchema;
  /** @deprecated use `GetThreadRequest$Outbound` instead. */
  export type Outbound = GetThreadRequest$Outbound;
}

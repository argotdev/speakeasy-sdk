/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RetrieveBatchRequest = {
  /**
   * The ID of the batch to retrieve.
   */
  batchId: string;
};

/** @internal */
export const RetrieveBatchRequest$inboundSchema: z.ZodType<
  RetrieveBatchRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  batch_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "batch_id": "batchId",
  });
});

/** @internal */
export type RetrieveBatchRequest$Outbound = {
  batch_id: string;
};

/** @internal */
export const RetrieveBatchRequest$outboundSchema: z.ZodType<
  RetrieveBatchRequest$Outbound,
  z.ZodTypeDef,
  RetrieveBatchRequest
> = z.object({
  batchId: z.string(),
}).transform((v) => {
  return remap$(v, {
    batchId: "batch_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetrieveBatchRequest$ {
  /** @deprecated use `RetrieveBatchRequest$inboundSchema` instead. */
  export const inboundSchema = RetrieveBatchRequest$inboundSchema;
  /** @deprecated use `RetrieveBatchRequest$outboundSchema` instead. */
  export const outboundSchema = RetrieveBatchRequest$outboundSchema;
  /** @deprecated use `RetrieveBatchRequest$Outbound` instead. */
  export type Outbound = RetrieveBatchRequest$Outbound;
}

export function retrieveBatchRequestToJSON(
  retrieveBatchRequest: RetrieveBatchRequest,
): string {
  return JSON.stringify(
    RetrieveBatchRequest$outboundSchema.parse(retrieveBatchRequest),
  );
}

export function retrieveBatchRequestFromJSON(
  jsonString: string,
): SafeParseResult<RetrieveBatchRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RetrieveBatchRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RetrieveBatchRequest' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RetrieveUserRequest = {
  /**
   * The ID of the user.
   */
  userId: string;
};

/** @internal */
export const RetrieveUserRequest$inboundSchema: z.ZodType<
  RetrieveUserRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  user_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "user_id": "userId",
  });
});

/** @internal */
export type RetrieveUserRequest$Outbound = {
  user_id: string;
};

/** @internal */
export const RetrieveUserRequest$outboundSchema: z.ZodType<
  RetrieveUserRequest$Outbound,
  z.ZodTypeDef,
  RetrieveUserRequest
> = z.object({
  userId: z.string(),
}).transform((v) => {
  return remap$(v, {
    userId: "user_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetrieveUserRequest$ {
  /** @deprecated use `RetrieveUserRequest$inboundSchema` instead. */
  export const inboundSchema = RetrieveUserRequest$inboundSchema;
  /** @deprecated use `RetrieveUserRequest$outboundSchema` instead. */
  export const outboundSchema = RetrieveUserRequest$outboundSchema;
  /** @deprecated use `RetrieveUserRequest$Outbound` instead. */
  export type Outbound = RetrieveUserRequest$Outbound;
}

export function retrieveUserRequestToJSON(
  retrieveUserRequest: RetrieveUserRequest,
): string {
  return JSON.stringify(
    RetrieveUserRequest$outboundSchema.parse(retrieveUserRequest),
  );
}

export function retrieveUserRequestFromJSON(
  jsonString: string,
): SafeParseResult<RetrieveUserRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RetrieveUserRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RetrieveUserRequest' from JSON`,
  );
}

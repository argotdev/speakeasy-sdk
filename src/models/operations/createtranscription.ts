/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * OK
 */
export type CreateTranscriptionResponseBody =
  | components.CreateTranscriptionResponseJson
  | components.CreateTranscriptionResponseVerboseJson;

/** @internal */
export const CreateTranscriptionResponseBody$inboundSchema: z.ZodType<
  CreateTranscriptionResponseBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.CreateTranscriptionResponseJson$inboundSchema,
  components.CreateTranscriptionResponseVerboseJson$inboundSchema,
]);

/** @internal */
export type CreateTranscriptionResponseBody$Outbound =
  | components.CreateTranscriptionResponseJson$Outbound
  | components.CreateTranscriptionResponseVerboseJson$Outbound;

/** @internal */
export const CreateTranscriptionResponseBody$outboundSchema: z.ZodType<
  CreateTranscriptionResponseBody$Outbound,
  z.ZodTypeDef,
  CreateTranscriptionResponseBody
> = z.union([
  components.CreateTranscriptionResponseJson$outboundSchema,
  components.CreateTranscriptionResponseVerboseJson$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTranscriptionResponseBody$ {
  /** @deprecated use `CreateTranscriptionResponseBody$inboundSchema` instead. */
  export const inboundSchema = CreateTranscriptionResponseBody$inboundSchema;
  /** @deprecated use `CreateTranscriptionResponseBody$outboundSchema` instead. */
  export const outboundSchema = CreateTranscriptionResponseBody$outboundSchema;
  /** @deprecated use `CreateTranscriptionResponseBody$Outbound` instead. */
  export type Outbound = CreateTranscriptionResponseBody$Outbound;
}

export function createTranscriptionResponseBodyToJSON(
  createTranscriptionResponseBody: CreateTranscriptionResponseBody,
): string {
  return JSON.stringify(
    CreateTranscriptionResponseBody$outboundSchema.parse(
      createTranscriptionResponseBody,
    ),
  );
}

export function createTranscriptionResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<CreateTranscriptionResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateTranscriptionResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateTranscriptionResponseBody' from JSON`,
  );
}

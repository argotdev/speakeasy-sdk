/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type CompleteUploadRequest = {
  /**
   * The ID of the Upload.
   *
   * @remarks
   */
  uploadId: string;
  completeUploadRequest: components.CompleteUploadRequest;
};

/** @internal */
export const CompleteUploadRequest$inboundSchema: z.ZodType<
  CompleteUploadRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  upload_id: z.string(),
  CompleteUploadRequest: components.CompleteUploadRequest$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "upload_id": "uploadId",
    "CompleteUploadRequest": "completeUploadRequest",
  });
});

/** @internal */
export type CompleteUploadRequest$Outbound = {
  upload_id: string;
  CompleteUploadRequest: components.CompleteUploadRequest$Outbound;
};

/** @internal */
export const CompleteUploadRequest$outboundSchema: z.ZodType<
  CompleteUploadRequest$Outbound,
  z.ZodTypeDef,
  CompleteUploadRequest
> = z.object({
  uploadId: z.string(),
  completeUploadRequest: components.CompleteUploadRequest$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    uploadId: "upload_id",
    completeUploadRequest: "CompleteUploadRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CompleteUploadRequest$ {
  /** @deprecated use `CompleteUploadRequest$inboundSchema` instead. */
  export const inboundSchema = CompleteUploadRequest$inboundSchema;
  /** @deprecated use `CompleteUploadRequest$outboundSchema` instead. */
  export const outboundSchema = CompleteUploadRequest$outboundSchema;
  /** @deprecated use `CompleteUploadRequest$Outbound` instead. */
  export type Outbound = CompleteUploadRequest$Outbound;
}
